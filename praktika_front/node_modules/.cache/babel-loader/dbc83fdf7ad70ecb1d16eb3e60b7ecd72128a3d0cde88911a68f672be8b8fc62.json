{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasat\\\\Desktop\\\\praktika_front\\\\src\\\\components\\\\AddLesson.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../styles/AddLesson.css';\n\n// function AddLesson() {\n//   const [title, setTitle] = useState('');\n//   const [content, setContent] = useState([]);\n\n//   // const [showQuiz, setShowQuiz] = useState(false);\n//   // const [quizzes, setQuizzes] = useState([]);\n\n//   // const [showCodeExecutor, setShowCodeExecutor] = useState(false);\n//   // const [codeExecutor, setCodeExecutor] = useState({\n//   //   file: '',\n//   //   taskDescription: '',\n//   //   taskInputFormat: '',\n//   //   taskOutputFormat: '',\n//   //   taskExample: { input: '', output: '' }\n//   // });\n//   // const [quizCount, setQuizCount] = useState(0); // Переменная для хранения количества Quiz\n\n//   const handleQuizChange = (index, event) => {\n//     const newQuizzes = [...quizzes];\n//     if (event.target.name === 'options') {\n//       const optionIndex = parseInt(event.target.dataset.index);\n//       newQuizzes[index].options[optionIndex] = event.target.value;\n//     } else {\n//       newQuizzes[index][event.target.name] = event.target.value;\n//     }\n//     setQuizzes(newQuizzes);\n//   };\n\n//   const handleCodeExecutorChange = (event) => {\n//     const { name, value } = event.target;\n//     setCodeExecutor((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleTaskExampleChange = (event) => {\n//     const { name, value } = event.target;\n//     setCodeExecutor((prev) => ({\n//       ...prev,\n//       taskExample: {\n//         ...prev.taskExample,\n//         [name]: value,\n//       },\n//     }));\n//   };\n\n//   // Функция для обновления значения элемента контента\n//   const handleContentChange = (index, value) => {\n//     setContent(prevContent => {\n//       const updatedContent = [...prevContent];\n//       updatedContent[index].value = value;\n//       return updatedContent;\n//     });\n//   };\n\n//   const handleListItemChange = (sectionIndex, itemIndex, event) => {\n//     const { value } = event.target;\n//     const updatedSections = [...sections];\n//     updatedSections[sectionIndex].list.items[itemIndex] = value;\n//     setSections(updatedSections);\n//   };\n\n//   const addSection = () => {\n//     setSections([...sections, { subtitle: '', content: '' }]);\n//   };\n\n//   const addQuiz = () => {\n//     setQuizzes([...quizzes, { question: '', options: ['', ''], answer: '' }]);\n//     setQuizCount((prevCount) => prevCount + 1);\n//     setShowQuiz(true); // Показываем Quiz при добавлении первого элемента\n//   };\n\n//   const addOption = (quizIndex) => {\n//     const newQuizzes = [...quizzes];\n//     newQuizzes[quizIndex].options.push('');\n//     setQuizzes(newQuizzes);\n//   };\n\n//   const addCodeExecutor = () => {\n//     setShowCodeExecutor(true);\n//   };\n\n//   const addContentItem = (type) => {\n//     let newContent;\n//     if (type === 'list') {\n//       newContent = {\n//         type,\n//         list: {\n//           items: [`Элемент 1`, `Элемент 2`]\n//         }\n//       };\n//     } else {\n//       newContent = {\n//         type,\n//         value: ''\n//       };\n//     }\n\n//     setSections(prevSections => [\n//       ...prevSections,\n//       newContent\n//     ]);\n//   };\n\n//   const addListItem = (sectionIndex) => {\n//     const updatedSections = [...sections];\n//     updatedSections[sectionIndex].list.items.push(`Элемент ${updatedSections[sectionIndex].list.items.length + 1}`);\n//     setSections(updatedSections);\n//   };\n\n//   const removeOption = (quizIndex, optionIndex) => {\n//     const newQuizzes = [...quizzes];\n//     newQuizzes[quizIndex].options.splice(optionIndex, 1);\n//     setQuizzes(newQuizzes);\n//   };\n\n//   const removeQuiz = () => {\n//     const newQuizzes = [...quizzes];\n//     newQuizzes.pop(); // Удаляем последний Quiz\n//     setQuizzes(newQuizzes);\n//     setQuizCount((prevCount) => prevCount - 1);\n//     if (quizCount === 1) {\n//       setShowQuiz(false); // Скрываем Quiz при удалении единственного элемента\n//     }\n//   };\n\n//   const removeCodeExecutor = () => {\n//     setCodeExecutor({\n//       file: '',\n//       taskDescription: '',\n//       taskInputFormat: '',\n//       taskOutputFormat: '',\n//       taskExample: { input: '', output: '' }\n//     });\n//     setShowCodeExecutor(false); // Скрываем Code Executor при удалении\n//   };\n\n//   // Функция для удаления элемента контента по индексу\n//   const removeContentItem = (index) => {\n//     setSections(prevSections => {\n//       const updatedSections = [...prevSections];\n//       updatedSections.splice(index, 1);\n//       return updatedSections;\n//     });\n//   };\n\n//   const removeListItem = (sectionIndex, itemIndex) => {\n//     if (sections[sectionIndex].list.items.length > 2) { // Ensure at least two items are present\n//       const updatedSections = [...sections];\n//       updatedSections[sectionIndex].list.items.splice(itemIndex, 1);\n//       setSections(updatedSections);\n//     }\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const lesson = { title, sections, quizzes, codeExecutor };\n\n//     const response = await fetch('http://localhost:4000/api/lessons', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(lesson),\n//     });\n\n//     console.log(JSON.stringify(lesson))\n//     if (response.ok) {\n//       // Обработка успешного добавления урока\n//       alert('Lesson added successfully!');\n//     } else {\n//       // Обработка ошибки\n//       alert('Error adding lesson.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"title\">Title:</label>\n//           <input\n//             type=\"text\"\n//             id=\"title\"\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         {content.map((section, index) => (\n//           <div key={index} className=\"form-group\">\n//             {section.type === 'text' && (\n//               <div>\n//                 <label>Текст:</label>\n//                 <textarea\n//                   value={section.value}\n//                   onChange={(e) => handleContentChange(index, e.target.value)}\n//                   required\n//                 />\n//               </div>\n//             )}\n\n//             {section.type === 'list' && (\n//               <div>\n//                 <label>Список:</label>\n//                 <ul>\n//                   {section.list.items.map((item, itemIndex) => (\n//                     <li key={itemIndex}>\n//                       <input\n//                         type=\"text\"\n//                         value={item}\n//                         onChange={(e) => handleListItemChange(index, itemIndex, e)}\n//                         placeholder={`Элемент ${itemIndex + 1}`}\n//                       />\n//                       {itemIndex > 1 && (  // ensure minimum two items exist before showing the delete button\n//                         <button type=\"button\" onClick={() => removeListItem(index, itemIndex)}>\n//                           Удалить элемент\n//                         </button>\n//                       )}\n//                     </li>\n//                   ))}\n//                 </ul>\n//                 <div>\n//                   <button type=\"button\" onClick={() => addListItem(index)}>\n//                     Добавить элемент\n//                   </button>\n//                 </div>\n//               </div>\n//             )}\n\n//             {section.type === 'code' && (\n//               <div>\n//                 <label>Code Block:</label>\n//                 <textarea\n//                   value={section.value}\n//                   onChange={(e) => handleContentChange(index, e.target.value)}\n//                   required\n//                 />\n//               </div>\n//             )}\n//             {sections.length && \n//               <button type=\"button\" onClick={() => removeContentItem(index)}>\n//                 Remove Content\n//               </button>\n//             }       \n//           </div>\n//         ))}\n\n//         <div>\n//           <button type=\"button\" onClick={() => addContentItem('text')}>Добавить текст</button>\n//           <button type=\"button\" onClick={() => addContentItem('list')}>Добавить список</button>\n//           <button type=\"button\" onClick={() => addContentItem('code')}>Добавить код</button>\n//         </div>\n\n//         <button type=\"button\" className=\"add-section-button\" onClick={addSection}>\n//           Add Section\n//         </button>\n\n//         {!showQuiz && (\n//           <button type=\"button\" className=\"add-section-button\" onClick={addQuiz}>\n//             Add Quiz\n//           </button>\n//         )}\n\n//         {showQuiz && (\n\n// )}\n\n//         {!showCodeExecutor && (\n//           <button type=\"button\" className=\"add-section-button\" onClick={addCodeExecutor}>\n//             Add Code Executor\n//           </button>\n//         )}\n\n//         {showCodeExecutor && (\n//           <div className=\"form-group\">\n//             <label htmlFor=\"file\">Code Executor File:</label>\n//             <input\n//               type=\"text\"\n//               id=\"file\"\n//               name=\"file\"\n//               value={codeExecutor.file}\n//               onChange={handleCodeExecutorChange}\n//               required\n//             />\n//             <label htmlFor=\"taskDescription\">Task Description:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskDescription\"\n//               name=\"taskDescription\"\n//               value={codeExecutor.taskDescription}\n//               onChange={handleCodeExecutorChange}\n//               required\n//             />\n//             <label htmlFor=\"taskInputFormat\">Task Input Format:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskInputFormat\"\n//               name=\"taskInputFormat\"\n//               value={codeExecutor.taskInputFormat}\n//               onChange={handleCodeExecutorChange}\n//               required\n//             />\n//             <label htmlFor=\"taskOutputFormat\">Task Output Format:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskOutputFormat\"\n//               name=\"taskOutputFormat\"\n//               value={codeExecutor.taskOutputFormat}\n//               onChange={handleCodeExecutorChange}\n//               required\n//             />\n//             <label htmlFor=\"taskExampleInput\">Task Example Input:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskExampleInput\"\n//               name=\"input\"\n//               value={codeExecutor.taskExample.input}\n//               onChange={handleTaskExampleChange}\n//               required\n//             />\n//             <label htmlFor=\"taskExampleOutput\">Task Example Output:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskExampleOutput\"\n//               name=\"output\"\n//               value={codeExecutor.taskExample.output}\n//               onChange={handleTaskExampleChange}\n//               required\n//             />\n//             <button type=\"button\" onClick={removeCodeExecutor}>\n//               Remove Code Executor\n//             </button>\n//           </div>\n//         )}\n\n//         <div className=\"button-container\">\n//           <button type=\"submit\">Add Lesson</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AddLesson;\n\nimport React, { useState } from 'react';\nimport '../styles/AddLesson.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddLesson = () => {\n  _s();\n  const [lesson, setLesson] = useState({\n    title: '',\n    content: []\n  });\n  const handleTitleChange = e => {\n    setLesson({\n      ...lesson,\n      title: e.target.value\n    });\n  };\n  const handleContentChange = (index, type, value) => {\n    const newContent = [...lesson.content];\n    newContent[index][type] = value;\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const addContentItem = type => {\n    let newContentItem;\n    switch (type) {\n      case 'text':\n        newContentItem = {\n          type,\n          text: ''\n        };\n        break;\n      case 'list':\n        newContentItem = {\n          type,\n          list: {\n            items: ['']\n          }\n        };\n        break;\n      case 'code':\n        newContentItem = {\n          type,\n          code: ''\n        };\n        break;\n      case 'subtitle':\n        newContentItem = {\n          type,\n          subtitle: ''\n        };\n        break;\n      case 'quizzes':\n        newContentItem = {\n          type,\n          quizzes: [{\n            question: '',\n            options: [''],\n            answer: ''\n          }]\n        };\n        break;\n      case 'codeExecutor':\n        newContentItem = {\n          type,\n          codeExecutor: {}\n        };\n        break;\n      default:\n        return;\n    }\n    setLesson({\n      ...lesson,\n      content: [...lesson.content, newContentItem]\n    });\n  };\n  const removeContentItem = index => {\n    const newContent = [...lesson.content];\n    newContent.splice(index, 1);\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const handleListItemChange = (sectionIndex, itemIndex, event) => {\n    const {\n      value\n    } = event.target;\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].list.items[itemIndex] = value;\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const addListItem = sectionIndex => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].list.items.push('');\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const removeListItem = (sectionIndex, itemIndex) => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].list.items.splice(itemIndex, 1);\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const handleQuizChange = (sectionIndex, quizIndex, event) => {\n    const {\n      name,\n      value,\n      dataset\n    } = event.target;\n    const newContent = [...lesson.content];\n    if (name === 'options') {\n      const optionIndex = dataset.index;\n      newContent[sectionIndex].quizzes[quizIndex].options[optionIndex] = value;\n    } else {\n      newContent[sectionIndex].quizzes[quizIndex][name] = value;\n    }\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const addOption = (sectionIndex, quizIndex) => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].quizzes[quizIndex].options.push('');\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const removeOption = (sectionIndex, quizIndex, optionIndex) => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].quizzes[quizIndex].options.splice(optionIndex, 1);\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const renderSection = (section, index) => {\n    switch (section.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: section.text,\n            onChange: e => handleContentChange(index, 'text', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this);\n      case 'list':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: section.list.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: item,\n                onChange: e => handleListItemChange(index, itemIndex, e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeListItem(index, itemIndex),\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this)]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => addListItem(index),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this);\n      case 'code':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u041A\\u043E\\u0434:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: section.code,\n            onChange: e => handleContentChange(index, 'code', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this);\n      case 'subtitle':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u041F\\u043E\\u0434\\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: section.subtitle,\n            onChange: e => handleContentChange(index, 'subtitle', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this);\n      case 'quizzes':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440\\u0438\\u043D\\u044B:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: section.quizzes.map((quiz, quizIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `question-${quizIndex}`,\n                children: \"Question:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `question-${quizIndex}`,\n                name: \"question\",\n                value: quiz.question,\n                onChange: e => handleQuizChange(index, quizIndex, e),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this), quiz.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `option-${quizIndex}-${optionIndex}`,\n                  children: [\"Option \", optionIndex + 1, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: `option-${quizIndex}-${optionIndex}`,\n                  name: \"options\",\n                  \"data-index\": optionIndex,\n                  value: option,\n                  onChange: e => handleQuizChange(index, quizIndex, e),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => removeOption(index, quizIndex, optionIndex),\n                  children: \"Remove Option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 23\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => addOption(index, quizIndex),\n                children: \"Add Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `answer-${quizIndex}`,\n                children: \"Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `answer-${quizIndex}`,\n                name: \"answer\",\n                value: quiz.answer,\n                onChange: e => handleQuizChange(index, quizIndex, e),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this)]\n            }, quizIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this))\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this);\n      case 'codeExecutor':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043E\\u0434\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-lesson-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lesson-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0443\\u0440\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u0443\\u0440\\u043E\\u043A\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: lesson.title,\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lesson-content\",\n      children: lesson.content.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lesson-section\",\n        children: renderSection(section, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('text'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('list'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('code'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('subtitle'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u0434\\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('quizzes'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0438\\u043A\\u0442\\u043E\\u0440\\u0438\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('codeExecutor'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043E\\u0434\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 571,\n    columnNumber: 5\n  }, this);\n};\n_s(AddLesson, \"aobYbLvm3f4TnAcDXUShsGUF+rs=\");\n_c = AddLesson;\nexport default AddLesson;\nvar _c;\n$RefreshReg$(_c, \"AddLesson\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AddLesson","_s","lesson","setLesson","title","content","handleTitleChange","e","target","value","handleContentChange","index","type","newContent","addContentItem","newContentItem","text","list","items","code","subtitle","quizzes","question","options","answer","codeExecutor","removeContentItem","splice","handleListItemChange","sectionIndex","itemIndex","event","addListItem","push","removeListItem","handleQuizChange","quizIndex","name","dataset","optionIndex","addOption","removeOption","renderSection","section","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","map","item","quiz","className","htmlFor","id","required","option","_c","$RefreshReg$"],"sources":["C:/Users/kasat/Desktop/praktika_front/src/components/AddLesson.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../styles/AddLesson.css';\r\n\r\n// function AddLesson() {\r\n//   const [title, setTitle] = useState('');\r\n//   const [content, setContent] = useState([]);\r\n  \r\n//   // const [showQuiz, setShowQuiz] = useState(false);\r\n//   // const [quizzes, setQuizzes] = useState([]);\r\n\r\n//   // const [showCodeExecutor, setShowCodeExecutor] = useState(false);\r\n//   // const [codeExecutor, setCodeExecutor] = useState({\r\n//   //   file: '',\r\n//   //   taskDescription: '',\r\n//   //   taskInputFormat: '',\r\n//   //   taskOutputFormat: '',\r\n//   //   taskExample: { input: '', output: '' }\r\n//   // });\r\n//   // const [quizCount, setQuizCount] = useState(0); // Переменная для хранения количества Quiz\r\n\r\n//   const handleQuizChange = (index, event) => {\r\n//     const newQuizzes = [...quizzes];\r\n//     if (event.target.name === 'options') {\r\n//       const optionIndex = parseInt(event.target.dataset.index);\r\n//       newQuizzes[index].options[optionIndex] = event.target.value;\r\n//     } else {\r\n//       newQuizzes[index][event.target.name] = event.target.value;\r\n//     }\r\n//     setQuizzes(newQuizzes);\r\n//   };\r\n\r\n//   const handleCodeExecutorChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setCodeExecutor((prev) => ({\r\n//       ...prev,\r\n//       [name]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleTaskExampleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setCodeExecutor((prev) => ({\r\n//       ...prev,\r\n//       taskExample: {\r\n//         ...prev.taskExample,\r\n//         [name]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   // Функция для обновления значения элемента контента\r\n//   const handleContentChange = (index, value) => {\r\n//     setContent(prevContent => {\r\n//       const updatedContent = [...prevContent];\r\n//       updatedContent[index].value = value;\r\n//       return updatedContent;\r\n//     });\r\n//   };\r\n\r\n//   const handleListItemChange = (sectionIndex, itemIndex, event) => {\r\n//     const { value } = event.target;\r\n//     const updatedSections = [...sections];\r\n//     updatedSections[sectionIndex].list.items[itemIndex] = value;\r\n//     setSections(updatedSections);\r\n//   };\r\n\r\n//   const addSection = () => {\r\n//     setSections([...sections, { subtitle: '', content: '' }]);\r\n//   };\r\n\r\n//   const addQuiz = () => {\r\n//     setQuizzes([...quizzes, { question: '', options: ['', ''], answer: '' }]);\r\n//     setQuizCount((prevCount) => prevCount + 1);\r\n//     setShowQuiz(true); // Показываем Quiz при добавлении первого элемента\r\n//   };\r\n\r\n//   const addOption = (quizIndex) => {\r\n//     const newQuizzes = [...quizzes];\r\n//     newQuizzes[quizIndex].options.push('');\r\n//     setQuizzes(newQuizzes);\r\n//   };\r\n\r\n//   const addCodeExecutor = () => {\r\n//     setShowCodeExecutor(true);\r\n//   };\r\n  \r\n//   const addContentItem = (type) => {\r\n//     let newContent;\r\n//     if (type === 'list') {\r\n//       newContent = {\r\n//         type,\r\n//         list: {\r\n//           items: [`Элемент 1`, `Элемент 2`]\r\n//         }\r\n//       };\r\n//     } else {\r\n//       newContent = {\r\n//         type,\r\n//         value: ''\r\n//       };\r\n//     }\r\n    \r\n//     setSections(prevSections => [\r\n//       ...prevSections,\r\n//       newContent\r\n//     ]);\r\n//   };\r\n\r\n//   const addListItem = (sectionIndex) => {\r\n//     const updatedSections = [...sections];\r\n//     updatedSections[sectionIndex].list.items.push(`Элемент ${updatedSections[sectionIndex].list.items.length + 1}`);\r\n//     setSections(updatedSections);\r\n//   };\r\n\r\n//   const removeOption = (quizIndex, optionIndex) => {\r\n//     const newQuizzes = [...quizzes];\r\n//     newQuizzes[quizIndex].options.splice(optionIndex, 1);\r\n//     setQuizzes(newQuizzes);\r\n//   };\r\n\r\n//   const removeQuiz = () => {\r\n//     const newQuizzes = [...quizzes];\r\n//     newQuizzes.pop(); // Удаляем последний Quiz\r\n//     setQuizzes(newQuizzes);\r\n//     setQuizCount((prevCount) => prevCount - 1);\r\n//     if (quizCount === 1) {\r\n//       setShowQuiz(false); // Скрываем Quiz при удалении единственного элемента\r\n//     }\r\n//   };\r\n\r\n//   const removeCodeExecutor = () => {\r\n//     setCodeExecutor({\r\n//       file: '',\r\n//       taskDescription: '',\r\n//       taskInputFormat: '',\r\n//       taskOutputFormat: '',\r\n//       taskExample: { input: '', output: '' }\r\n//     });\r\n//     setShowCodeExecutor(false); // Скрываем Code Executor при удалении\r\n//   };\r\n\r\n//   // Функция для удаления элемента контента по индексу\r\n//   const removeContentItem = (index) => {\r\n//     setSections(prevSections => {\r\n//       const updatedSections = [...prevSections];\r\n//       updatedSections.splice(index, 1);\r\n//       return updatedSections;\r\n//     });\r\n//   };\r\n\r\n//   const removeListItem = (sectionIndex, itemIndex) => {\r\n//     if (sections[sectionIndex].list.items.length > 2) { // Ensure at least two items are present\r\n//       const updatedSections = [...sections];\r\n//       updatedSections[sectionIndex].list.items.splice(itemIndex, 1);\r\n//       setSections(updatedSections);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     const lesson = { title, sections, quizzes, codeExecutor };\r\n\r\n//     const response = await fetch('http://localhost:4000/api/lessons', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(lesson),\r\n//     });\r\n\r\n//     console.log(JSON.stringify(lesson))\r\n//     if (response.ok) {\r\n//       // Обработка успешного добавления урока\r\n//       alert('Lesson added successfully!');\r\n//     } else {\r\n//       // Обработка ошибки\r\n//       alert('Error adding lesson.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"form-container\">\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"title\">Title:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"title\"\r\n//             value={title}\r\n//             onChange={(e) => setTitle(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {content.map((section, index) => (\r\n//           <div key={index} className=\"form-group\">\r\n//             {section.type === 'text' && (\r\n//               <div>\r\n//                 <label>Текст:</label>\r\n//                 <textarea\r\n//                   value={section.value}\r\n//                   onChange={(e) => handleContentChange(index, e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//             )}\r\n\r\n//             {section.type === 'list' && (\r\n//               <div>\r\n//                 <label>Список:</label>\r\n//                 <ul>\r\n//                   {section.list.items.map((item, itemIndex) => (\r\n//                     <li key={itemIndex}>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={item}\r\n//                         onChange={(e) => handleListItemChange(index, itemIndex, e)}\r\n//                         placeholder={`Элемент ${itemIndex + 1}`}\r\n//                       />\r\n//                       {itemIndex > 1 && (  // ensure minimum two items exist before showing the delete button\r\n//                         <button type=\"button\" onClick={() => removeListItem(index, itemIndex)}>\r\n//                           Удалить элемент\r\n//                         </button>\r\n//                       )}\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//                 <div>\r\n//                   <button type=\"button\" onClick={() => addListItem(index)}>\r\n//                     Добавить элемент\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n\r\n//             {section.type === 'code' && (\r\n//               <div>\r\n//                 <label>Code Block:</label>\r\n//                 <textarea\r\n//                   value={section.value}\r\n//                   onChange={(e) => handleContentChange(index, e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//             {sections.length && \r\n//               <button type=\"button\" onClick={() => removeContentItem(index)}>\r\n//                 Remove Content\r\n//               </button>\r\n//             }       \r\n//           </div>\r\n//         ))}\r\n\r\n//         <div>\r\n//           <button type=\"button\" onClick={() => addContentItem('text')}>Добавить текст</button>\r\n//           <button type=\"button\" onClick={() => addContentItem('list')}>Добавить список</button>\r\n//           <button type=\"button\" onClick={() => addContentItem('code')}>Добавить код</button>\r\n//         </div>\r\n\r\n//         <button type=\"button\" className=\"add-section-button\" onClick={addSection}>\r\n//           Add Section\r\n//         </button>\r\n\r\n//         {!showQuiz && (\r\n//           <button type=\"button\" className=\"add-section-button\" onClick={addQuiz}>\r\n//             Add Quiz\r\n//           </button>\r\n//         )}\r\n\r\n//         {showQuiz && (\r\n          \r\n        // )}\r\n\r\n//         {!showCodeExecutor && (\r\n//           <button type=\"button\" className=\"add-section-button\" onClick={addCodeExecutor}>\r\n//             Add Code Executor\r\n//           </button>\r\n//         )}\r\n\r\n//         {showCodeExecutor && (\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"file\">Code Executor File:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"file\"\r\n//               name=\"file\"\r\n//               value={codeExecutor.file}\r\n//               onChange={handleCodeExecutorChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskDescription\">Task Description:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskDescription\"\r\n//               name=\"taskDescription\"\r\n//               value={codeExecutor.taskDescription}\r\n//               onChange={handleCodeExecutorChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskInputFormat\">Task Input Format:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskInputFormat\"\r\n//               name=\"taskInputFormat\"\r\n//               value={codeExecutor.taskInputFormat}\r\n//               onChange={handleCodeExecutorChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskOutputFormat\">Task Output Format:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskOutputFormat\"\r\n//               name=\"taskOutputFormat\"\r\n//               value={codeExecutor.taskOutputFormat}\r\n//               onChange={handleCodeExecutorChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskExampleInput\">Task Example Input:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskExampleInput\"\r\n//               name=\"input\"\r\n//               value={codeExecutor.taskExample.input}\r\n//               onChange={handleTaskExampleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskExampleOutput\">Task Example Output:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskExampleOutput\"\r\n//               name=\"output\"\r\n//               value={codeExecutor.taskExample.output}\r\n//               onChange={handleTaskExampleChange}\r\n//               required\r\n//             />\r\n//             <button type=\"button\" onClick={removeCodeExecutor}>\r\n//               Remove Code Executor\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         <div className=\"button-container\">\r\n//           <button type=\"submit\">Add Lesson</button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AddLesson;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport '../styles/AddLesson.css';\r\n\r\nconst AddLesson = () => {\r\n  const [lesson, setLesson] = useState({\r\n    title: '',\r\n    content: []\r\n  });\r\n\r\n  const handleTitleChange = (e) => {\r\n    setLesson({ ...lesson, title: e.target.value });\r\n  };\r\n\r\n  const handleContentChange = (index, type, value) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[index][type] = value;\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const addContentItem = (type) => {\r\n    let newContentItem;\r\n    switch (type) {\r\n      case 'text':\r\n        newContentItem = { type, text: '' };\r\n        break;\r\n      case 'list':\r\n        newContentItem = { type, list: { items: [''] } };\r\n        break;\r\n      case 'code':\r\n        newContentItem = { type, code: '' };\r\n        break;\r\n      case 'subtitle':\r\n        newContentItem = { type, subtitle: '' };\r\n        break;\r\n      case 'quizzes':\r\n        newContentItem = { type, quizzes: [{ question: '', options: [''], answer: '' }] };\r\n        break;\r\n      case 'codeExecutor':\r\n        newContentItem = { type, codeExecutor: {} };\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setLesson({ ...lesson, content: [...lesson.content, newContentItem] });\r\n  };\r\n\r\n  const removeContentItem = (index) => {\r\n    const newContent = [...lesson.content];\r\n    newContent.splice(index, 1);\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const handleListItemChange = (sectionIndex, itemIndex, event) => {\r\n    const { value } = event.target;\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].list.items[itemIndex] = value;\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const addListItem = (sectionIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].list.items.push('');\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const removeListItem = (sectionIndex, itemIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].list.items.splice(itemIndex, 1);\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const handleQuizChange = (sectionIndex, quizIndex, event) => {\r\n    const { name, value, dataset } = event.target;\r\n    const newContent = [...lesson.content];\r\n    if (name === 'options') {\r\n      const optionIndex = dataset.index;\r\n      newContent[sectionIndex].quizzes[quizIndex].options[optionIndex] = value;\r\n    } else {\r\n      newContent[sectionIndex].quizzes[quizIndex][name] = value;\r\n    }\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const addOption = (sectionIndex, quizIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].quizzes[quizIndex].options.push('');\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const removeOption = (sectionIndex, quizIndex, optionIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].quizzes[quizIndex].options.splice(optionIndex, 1);\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  \r\n\r\n  const renderSection = (section, index) => {\r\n    switch (section.type) {\r\n      case 'text':\r\n        return (\r\n          <div key={index}>\r\n            <label>Text:</label>\r\n            <textarea\r\n              value={section.text}\r\n              onChange={(e) => handleContentChange(index, 'text', e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'list':\r\n        return (\r\n          <div key={index}>\r\n            <label>Список:</label>\r\n            <ul>\r\n              {section.list.items.map((item, itemIndex) => (\r\n                <li key={itemIndex}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={item}\r\n                    onChange={(e) => handleListItemChange(index, itemIndex, e)}\r\n                  />\r\n                  <button type=\"button\" onClick={() => removeListItem(index, itemIndex)}>Удалить элемент</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <button type=\"button\" onClick={() => addListItem(index)}>Добавить элемент</button>\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'code':\r\n        return (\r\n          <div key={index}>\r\n            <label>Код:</label>\r\n            <textarea\r\n              value={section.code}\r\n              onChange={(e) => handleContentChange(index, 'code', e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'subtitle':\r\n        return (\r\n          <div key={index}>\r\n            <label>Подзаголовок:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={section.subtitle}\r\n              onChange={(e) => handleContentChange(index, 'subtitle', e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'quizzes':\r\n        return (\r\n          <div key={index}>\r\n            <label>Викторины:</label>\r\n            <>\r\n              {section.quizzes.map((quiz, quizIndex) => (\r\n                <div key={quizIndex} className=\"form-group\">\r\n                  <label htmlFor={`question-${quizIndex}`}>Question:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id={`question-${quizIndex}`}\r\n                    name=\"question\"\r\n                    value={quiz.question}\r\n                    onChange={(e) => handleQuizChange(index, quizIndex, e)}\r\n                    required\r\n                  />\r\n                  {quiz.options.map((option, optionIndex) => (\r\n                    <div key={optionIndex} className=\"option-group\">\r\n                      <label htmlFor={`option-${quizIndex}-${optionIndex}`}>Option {optionIndex + 1}:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id={`option-${quizIndex}-${optionIndex}`}\r\n                        name=\"options\"\r\n                        data-index={optionIndex}\r\n                        value={option}\r\n                        onChange={(e) => handleQuizChange(index, quizIndex, e)}\r\n                        required\r\n                      />\r\n                      <button type=\"button\" onClick={() => removeOption(index, quizIndex, optionIndex)}>\r\n                        Remove Option\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                  <button type=\"button\" onClick={() => addOption(index, quizIndex)}>\r\n                    Add Option\r\n                  </button>\r\n                  <label htmlFor={`answer-${quizIndex}`}>Answer:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id={`answer-${quizIndex}`}\r\n                    name=\"answer\"\r\n                    value={quiz.answer}\r\n                    onChange={(e) => handleQuizChange(index, quizIndex, e)}\r\n                    required\r\n                  />\r\n                </div>\r\n              ))}\r\n            </>\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'codeExecutor':\r\n        return (\r\n          <div key={index}>\r\n            <label>Выполнение кода:</label>\r\n            {/* Здесь можно добавить обработку выполнения кода */}\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='add-lesson-container'>\r\n      <div className='lesson-header'>\r\n        <h1>Добавить урок</h1>\r\n        <label>Заголовок урока:</label>\r\n        <input\r\n          type='text'\r\n          value={lesson.title}\r\n          onChange={handleTitleChange}\r\n        />\r\n      </div>\r\n      <div className='lesson-content'>\r\n        {lesson.content.map((section, index) => (\r\n          <div className='lesson-section' key={index}>\r\n            {renderSection(section, index)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='add-buttons'>\r\n        <button type='button' onClick={() => addContentItem('text')}>Добавить текст</button>\r\n        <button type='button' onClick={() => addContentItem('list')}>Добавить список</button>\r\n        <button type='button' onClick={() => addContentItem('code')}>Добавить код</button>\r\n        <button type='button' onClick={() => addContentItem('subtitle')}>Добавить подзаголовок</button>\r\n        <button type='button' onClick={() => addContentItem('quizzes')}>Добавить викторину</button>\r\n        <button type='button' onClick={() => addContentItem('codeExecutor')}>Добавить выполнение кода</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLesson;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEQ;;AAER;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC;IACnCS,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/BJ,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,KAAK,EAAEG,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EACjD,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAEH,KAAK,KAAK;IAClD,MAAMI,UAAU,GAAG,CAAC,GAAGX,MAAM,CAACG,OAAO,CAAC;IACtCQ,UAAU,CAACF,KAAK,CAAC,CAACC,IAAI,CAAC,GAAGH,KAAK;IAC/BN,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,OAAO,EAAEQ;IAAW,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMC,cAAc,GAAIF,IAAI,IAAK;IAC/B,IAAIG,cAAc;IAClB,QAAQH,IAAI;MACV,KAAK,MAAM;QACTG,cAAc,GAAG;UAAEH,IAAI;UAAEI,IAAI,EAAE;QAAG,CAAC;QACnC;MACF,KAAK,MAAM;QACTD,cAAc,GAAG;UAAEH,IAAI;UAAEK,IAAI,EAAE;YAAEC,KAAK,EAAE,CAAC,EAAE;UAAE;QAAE,CAAC;QAChD;MACF,KAAK,MAAM;QACTH,cAAc,GAAG;UAAEH,IAAI;UAAEO,IAAI,EAAE;QAAG,CAAC;QACnC;MACF,KAAK,UAAU;QACbJ,cAAc,GAAG;UAAEH,IAAI;UAAEQ,QAAQ,EAAE;QAAG,CAAC;QACvC;MACF,KAAK,SAAS;QACZL,cAAc,GAAG;UAAEH,IAAI;UAAES,OAAO,EAAE,CAAC;YAAEC,QAAQ,EAAE,EAAE;YAAEC,OAAO,EAAE,CAAC,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAG,CAAC;QAAE,CAAC;QACjF;MACF,KAAK,cAAc;QACjBT,cAAc,GAAG;UAAEH,IAAI;UAAEa,YAAY,EAAE,CAAC;QAAE,CAAC;QAC3C;MACF;QACE;IACJ;IACAtB,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,OAAO,EAAE,CAAC,GAAGH,MAAM,CAACG,OAAO,EAAEU,cAAc;IAAE,CAAC,CAAC;EACxE,CAAC;EAED,MAAMW,iBAAiB,GAAIf,KAAK,IAAK;IACnC,MAAME,UAAU,GAAG,CAAC,GAAGX,MAAM,CAACG,OAAO,CAAC;IACtCQ,UAAU,CAACc,MAAM,CAAChB,KAAK,EAAE,CAAC,CAAC;IAC3BR,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,OAAO,EAAEQ;IAAW,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMe,oBAAoB,GAAGA,CAACC,YAAY,EAAEC,SAAS,EAAEC,KAAK,KAAK;IAC/D,MAAM;MAAEtB;IAAM,CAAC,GAAGsB,KAAK,CAACvB,MAAM;IAC9B,MAAMK,UAAU,GAAG,CAAC,GAAGX,MAAM,CAACG,OAAO,CAAC;IACtCQ,UAAU,CAACgB,YAAY,CAAC,CAACZ,IAAI,CAACC,KAAK,CAACY,SAAS,CAAC,GAAGrB,KAAK;IACtDN,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,OAAO,EAAEQ;IAAW,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMmB,WAAW,GAAIH,YAAY,IAAK;IACpC,MAAMhB,UAAU,GAAG,CAAC,GAAGX,MAAM,CAACG,OAAO,CAAC;IACtCQ,UAAU,CAACgB,YAAY,CAAC,CAACZ,IAAI,CAACC,KAAK,CAACe,IAAI,CAAC,EAAE,CAAC;IAC5C9B,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,OAAO,EAAEQ;IAAW,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMqB,cAAc,GAAGA,CAACL,YAAY,EAAEC,SAAS,KAAK;IAClD,MAAMjB,UAAU,GAAG,CAAC,GAAGX,MAAM,CAACG,OAAO,CAAC;IACtCQ,UAAU,CAACgB,YAAY,CAAC,CAACZ,IAAI,CAACC,KAAK,CAACS,MAAM,CAACG,SAAS,EAAE,CAAC,CAAC;IACxD3B,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,OAAO,EAAEQ;IAAW,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMsB,gBAAgB,GAAGA,CAACN,YAAY,EAAEO,SAAS,EAAEL,KAAK,KAAK;IAC3D,MAAM;MAAEM,IAAI;MAAE5B,KAAK;MAAE6B;IAAQ,CAAC,GAAGP,KAAK,CAACvB,MAAM;IAC7C,MAAMK,UAAU,GAAG,CAAC,GAAGX,MAAM,CAACG,OAAO,CAAC;IACtC,IAAIgC,IAAI,KAAK,SAAS,EAAE;MACtB,MAAME,WAAW,GAAGD,OAAO,CAAC3B,KAAK;MACjCE,UAAU,CAACgB,YAAY,CAAC,CAACR,OAAO,CAACe,SAAS,CAAC,CAACb,OAAO,CAACgB,WAAW,CAAC,GAAG9B,KAAK;IAC1E,CAAC,MAAM;MACLI,UAAU,CAACgB,YAAY,CAAC,CAACR,OAAO,CAACe,SAAS,CAAC,CAACC,IAAI,CAAC,GAAG5B,KAAK;IAC3D;IACAN,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,OAAO,EAAEQ;IAAW,CAAC,CAAC;EAC/C,CAAC;EAED,MAAM2B,SAAS,GAAGA,CAACX,YAAY,EAAEO,SAAS,KAAK;IAC7C,MAAMvB,UAAU,GAAG,CAAC,GAAGX,MAAM,CAACG,OAAO,CAAC;IACtCQ,UAAU,CAACgB,YAAY,CAAC,CAACR,OAAO,CAACe,SAAS,CAAC,CAACb,OAAO,CAACU,IAAI,CAAC,EAAE,CAAC;IAC5D9B,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,OAAO,EAAEQ;IAAW,CAAC,CAAC;EAC/C,CAAC;EAED,MAAM4B,YAAY,GAAGA,CAACZ,YAAY,EAAEO,SAAS,EAAEG,WAAW,KAAK;IAC7D,MAAM1B,UAAU,GAAG,CAAC,GAAGX,MAAM,CAACG,OAAO,CAAC;IACtCQ,UAAU,CAACgB,YAAY,CAAC,CAACR,OAAO,CAACe,SAAS,CAAC,CAACb,OAAO,CAACI,MAAM,CAACY,WAAW,EAAE,CAAC,CAAC;IAC1EpC,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,OAAO,EAAEQ;IAAW,CAAC,CAAC;EAC/C,CAAC;EAID,MAAM6B,aAAa,GAAGA,CAACC,OAAO,EAAEhC,KAAK,KAAK;IACxC,QAAQgC,OAAO,CAAC/B,IAAI;MAClB,KAAK,MAAM;QACT,oBACEf,OAAA;UAAA+C,QAAA,gBACE/C,OAAA;YAAA+C,QAAA,EAAO;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBnD,OAAA;YACEY,KAAK,EAAEkC,OAAO,CAAC3B,IAAK;YACpBiC,QAAQ,EAAG1C,CAAC,IAAKG,mBAAmB,CAACC,KAAK,EAAE,MAAM,EAAEJ,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE,CAAC,eACFnD,OAAA;YAAQe,IAAI,EAAC,QAAQ;YAACsC,OAAO,EAAEA,CAAA,KAAMxB,iBAAiB,CAACf,KAAK,CAAE;YAAAiC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GANvErC,KAAK;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CAAC;MAEV,KAAK,MAAM;QACT,oBACEnD,OAAA;UAAA+C,QAAA,gBACE/C,OAAA;YAAA+C,QAAA,EAAO;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtBnD,OAAA;YAAA+C,QAAA,EACGD,OAAO,CAAC1B,IAAI,CAACC,KAAK,CAACiC,GAAG,CAAC,CAACC,IAAI,EAAEtB,SAAS,kBACtCjC,OAAA;cAAA+C,QAAA,gBACE/C,OAAA;gBACEe,IAAI,EAAC,MAAM;gBACXH,KAAK,EAAE2C,IAAK;gBACZH,QAAQ,EAAG1C,CAAC,IAAKqB,oBAAoB,CAACjB,KAAK,EAAEmB,SAAS,EAAEvB,CAAC;cAAE;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D,CAAC,eACFnD,OAAA;gBAAQe,IAAI,EAAC,QAAQ;gBAACsC,OAAO,EAAEA,CAAA,KAAMhB,cAAc,CAACvB,KAAK,EAAEmB,SAAS,CAAE;gBAAAc,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GANxFlB,SAAS;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOd,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLnD,OAAA;YAAQe,IAAI,EAAC,QAAQ;YAACsC,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACrB,KAAK,CAAE;YAAAiC,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClFnD,OAAA;YAAQe,IAAI,EAAC,QAAQ;YAACsC,OAAO,EAAEA,CAAA,KAAMxB,iBAAiB,CAACf,KAAK,CAAE;YAAAiC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAfvErC,KAAK;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBV,CAAC;MAEV,KAAK,MAAM;QACT,oBACEnD,OAAA;UAAA+C,QAAA,gBACE/C,OAAA;YAAA+C,QAAA,EAAO;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnBnD,OAAA;YACEY,KAAK,EAAEkC,OAAO,CAACxB,IAAK;YACpB8B,QAAQ,EAAG1C,CAAC,IAAKG,mBAAmB,CAACC,KAAK,EAAE,MAAM,EAAEJ,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE,CAAC,eACFnD,OAAA;YAAQe,IAAI,EAAC,QAAQ;YAACsC,OAAO,EAAEA,CAAA,KAAMxB,iBAAiB,CAACf,KAAK,CAAE;YAAAiC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GANvErC,KAAK;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CAAC;MAEV,KAAK,UAAU;QACb,oBACEnD,OAAA;UAAA+C,QAAA,gBACE/C,OAAA;YAAA+C,QAAA,EAAO;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5BnD,OAAA;YACEe,IAAI,EAAC,MAAM;YACXH,KAAK,EAAEkC,OAAO,CAACvB,QAAS;YACxB6B,QAAQ,EAAG1C,CAAC,IAAKG,mBAAmB,CAACC,KAAK,EAAE,UAAU,EAAEJ,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzE,CAAC,eACFnD,OAAA;YAAQe,IAAI,EAAC,QAAQ;YAACsC,OAAO,EAAEA,CAAA,KAAMxB,iBAAiB,CAACf,KAAK,CAAE;YAAAiC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAPvErC,KAAK;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CAAC;MAEV,KAAK,SAAS;QACZ,oBACEnD,OAAA;UAAA+C,QAAA,gBACE/C,OAAA;YAAA+C,QAAA,EAAO;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzBnD,OAAA,CAAAE,SAAA;YAAA6C,QAAA,EACGD,OAAO,CAACtB,OAAO,CAAC8B,GAAG,CAAC,CAACE,IAAI,EAAEjB,SAAS,kBACnCvC,OAAA;cAAqByD,SAAS,EAAC,YAAY;cAAAV,QAAA,gBACzC/C,OAAA;gBAAO0D,OAAO,EAAE,YAAYnB,SAAS,EAAG;gBAAAQ,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC1DnD,OAAA;gBACEe,IAAI,EAAC,MAAM;gBACX4C,EAAE,EAAE,YAAYpB,SAAS,EAAG;gBAC5BC,IAAI,EAAC,UAAU;gBACf5B,KAAK,EAAE4C,IAAI,CAAC/B,QAAS;gBACrB2B,QAAQ,EAAG1C,CAAC,IAAK4B,gBAAgB,CAACxB,KAAK,EAAEyB,SAAS,EAAE7B,CAAC,CAAE;gBACvDkD,QAAQ;cAAA;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,EACDK,IAAI,CAAC9B,OAAO,CAAC4B,GAAG,CAAC,CAACO,MAAM,EAAEnB,WAAW,kBACpC1C,OAAA;gBAAuByD,SAAS,EAAC,cAAc;gBAAAV,QAAA,gBAC7C/C,OAAA;kBAAO0D,OAAO,EAAE,UAAUnB,SAAS,IAAIG,WAAW,EAAG;kBAAAK,QAAA,GAAC,SAAO,EAACL,WAAW,GAAG,CAAC,EAAC,GAAC;gBAAA;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACvFnD,OAAA;kBACEe,IAAI,EAAC,MAAM;kBACX4C,EAAE,EAAE,UAAUpB,SAAS,IAAIG,WAAW,EAAG;kBACzCF,IAAI,EAAC,SAAS;kBACd,cAAYE,WAAY;kBACxB9B,KAAK,EAAEiD,MAAO;kBACdT,QAAQ,EAAG1C,CAAC,IAAK4B,gBAAgB,CAACxB,KAAK,EAAEyB,SAAS,EAAE7B,CAAC,CAAE;kBACvDkD,QAAQ;gBAAA;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC,eACFnD,OAAA;kBAAQe,IAAI,EAAC,QAAQ;kBAACsC,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAAC9B,KAAK,EAAEyB,SAAS,EAAEG,WAAW,CAAE;kBAAAK,QAAA,EAAC;gBAElF;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAbDT,WAAW;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAchB,CACN,CAAC,eACFnD,OAAA;gBAAQe,IAAI,EAAC,QAAQ;gBAACsC,OAAO,EAAEA,CAAA,KAAMV,SAAS,CAAC7B,KAAK,EAAEyB,SAAS,CAAE;gBAAAQ,QAAA,EAAC;cAElE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTnD,OAAA;gBAAO0D,OAAO,EAAE,UAAUnB,SAAS,EAAG;gBAAAQ,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtDnD,OAAA;gBACEe,IAAI,EAAC,MAAM;gBACX4C,EAAE,EAAE,UAAUpB,SAAS,EAAG;gBAC1BC,IAAI,EAAC,QAAQ;gBACb5B,KAAK,EAAE4C,IAAI,CAAC7B,MAAO;gBACnByB,QAAQ,EAAG1C,CAAC,IAAK4B,gBAAgB,CAACxB,KAAK,EAAEyB,SAAS,EAAE7B,CAAC,CAAE;gBACvDkD,QAAQ;cAAA;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA,GAtCMZ,SAAS;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAuCd,CACN;UAAC,gBACF,CAAC,eACHnD,OAAA;YAAQe,IAAI,EAAC,QAAQ;YAACsC,OAAO,EAAEA,CAAA,KAAMxB,iBAAiB,CAACf,KAAK,CAAE;YAAAiC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GA9CvErC,KAAK;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+CV,CAAC;MAEV,KAAK,cAAc;QACjB,oBACEnD,OAAA;UAAA+C,QAAA,gBACE/C,OAAA;YAAA+C,QAAA,EAAO;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAE/BnD,OAAA;YAAQe,IAAI,EAAC,QAAQ;YAACsC,OAAO,EAAEA,CAAA,KAAMxB,iBAAiB,CAACf,KAAK,CAAE;YAAAiC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAHvErC,KAAK;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CAAC;MAEV;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACEnD,OAAA;IAAKyD,SAAS,EAAC,sBAAsB;IAAAV,QAAA,gBACnC/C,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAV,QAAA,gBAC5B/C,OAAA;QAAA+C,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBnD,OAAA;QAAA+C,QAAA,EAAO;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/BnD,OAAA;QACEe,IAAI,EAAC,MAAM;QACXH,KAAK,EAAEP,MAAM,CAACE,KAAM;QACpB6C,QAAQ,EAAE3C;MAAkB;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnD,OAAA;MAAKyD,SAAS,EAAC,gBAAgB;MAAAV,QAAA,EAC5B1C,MAAM,CAACG,OAAO,CAAC8C,GAAG,CAAC,CAACR,OAAO,EAAEhC,KAAK,kBACjCd,OAAA;QAAKyD,SAAS,EAAC,gBAAgB;QAAAV,QAAA,EAC5BF,aAAa,CAACC,OAAO,EAAEhC,KAAK;MAAC,GADKA,KAAK;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnD,OAAA;MAAKyD,SAAS,EAAC,aAAa;MAAAV,QAAA,gBAC1B/C,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACsC,OAAO,EAAEA,CAAA,KAAMpC,cAAc,CAAC,MAAM,CAAE;QAAA8B,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpFnD,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACsC,OAAO,EAAEA,CAAA,KAAMpC,cAAc,CAAC,MAAM,CAAE;QAAA8B,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrFnD,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACsC,OAAO,EAAEA,CAAA,KAAMpC,cAAc,CAAC,MAAM,CAAE;QAAA8B,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClFnD,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACsC,OAAO,EAAEA,CAAA,KAAMpC,cAAc,CAAC,UAAU,CAAE;QAAA8B,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/FnD,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACsC,OAAO,EAAEA,CAAA,KAAMpC,cAAc,CAAC,SAAS,CAAE;QAAA8B,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3FnD,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACsC,OAAO,EAAEA,CAAA,KAAMpC,cAAc,CAAC,cAAc,CAAE;QAAA8B,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/C,EAAA,CAlPID,SAAS;AAAA2D,EAAA,GAAT3D,SAAS;AAoPf,eAAeA,SAAS;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}