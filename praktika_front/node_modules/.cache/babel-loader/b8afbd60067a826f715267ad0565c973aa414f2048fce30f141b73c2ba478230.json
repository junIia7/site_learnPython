{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasat\\\\Desktop\\\\praktika_front\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../styles/Quiz.css';\n\n// const Quiz = ({quiz}) => {\n\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [showResult, setShowResult] = useState(false);\n//   const [showError, setShowError] = useState(false);\n//   const questions = quiz\n//   console.log(quiz)\n\n//   const handleAnswerOptionClick = (selectedOption) => {\n//     if (selectedOption === questions[currentQuestion].answer) {\n//       setShowError(false);\n//       const nextQuestion = currentQuestion + 1;\n//       if (nextQuestion < questions.length)\n//         setCurrentQuestion(nextQuestion);\n//       else\n//         setShowResult(true);\n//     }\n//     else\n//       setShowError(true);\n//   };\n\n//   return (\n//     <div className=\"quiz-container\">\n//       {showResult ? (\n//         <div className=\"result-section\">\n//           <h2>Тест пройден успешно!</h2>\n//         </div>\n//       )\n//       :\n//       (\n//         <div className=\"question-section\">\n//           <h2>Вопрос {currentQuestion + 1} из {questions.length}</h2>\n//           <p>{questions[currentQuestion].question}</p>\n//           <div className=\"options-section\">\n//             {questions[currentQuestion].options.map((option, index) => (\n//               <button key={index} onClick={() => handleAnswerOptionClick(option)}>\n//                 {option}\n//               </button>\n//             ))}\n//           </div>\n//           {showError && <p className=\"error-message\">Ответ неверный, попробуйте еще раз.</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Quiz;\n\nimport React, { useState } from 'react';\nimport '../styles/Quiz.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  quiz\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [isCompleted, setIsCompleted] = useState(false);\n  const handleOptionClick = isCorrect => {\n    if (isCorrect) {\n      if (currentQuestionIndex < quiz.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setFeedback('');\n      } else {\n        setIsCompleted(true);\n        setFeedback('Тест пройден');\n      }\n    } else {\n      setFeedback('Ответ неверный');\n    }\n  };\n  const currentQuestion = quiz[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: isCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-completed\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-question\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-options\",\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option === currentQuestion.answer),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-feedback\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"myUWu6g0CeSz/1XyO8Efn8cwwV0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","feedback","setFeedback","isCompleted","setIsCompleted","handleOptionClick","isCorrect","length","currentQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","onClick","answer","_c","$RefreshReg$"],"sources":["C:/Users/kasat/Desktop/praktika_front/src/components/Quiz.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../styles/Quiz.css';\r\n\r\n// const Quiz = ({quiz}) => {\r\n\r\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\r\n//   const [showResult, setShowResult] = useState(false);\r\n//   const [showError, setShowError] = useState(false);\r\n//   const questions = quiz\r\n//   console.log(quiz)\r\n\r\n//   const handleAnswerOptionClick = (selectedOption) => {\r\n//     if (selectedOption === questions[currentQuestion].answer) {\r\n//       setShowError(false);\r\n//       const nextQuestion = currentQuestion + 1;\r\n//       if (nextQuestion < questions.length)\r\n//         setCurrentQuestion(nextQuestion);\r\n//       else\r\n//         setShowResult(true);\r\n//     }\r\n//     else\r\n//       setShowError(true);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"quiz-container\">\r\n//       {showResult ? (\r\n//         <div className=\"result-section\">\r\n//           <h2>Тест пройден успешно!</h2>\r\n//         </div>\r\n//       )\r\n//       :\r\n//       (\r\n//         <div className=\"question-section\">\r\n//           <h2>Вопрос {currentQuestion + 1} из {questions.length}</h2>\r\n//           <p>{questions[currentQuestion].question}</p>\r\n//           <div className=\"options-section\">\r\n//             {questions[currentQuestion].options.map((option, index) => (\r\n//               <button key={index} onClick={() => handleAnswerOptionClick(option)}>\r\n//                 {option}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//           {showError && <p className=\"error-message\">Ответ неверный, попробуйте еще раз.</p>}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Quiz;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport '../styles/Quiz.css';\r\n\r\nconst Quiz = ({ quiz }) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n  const handleOptionClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      if (currentQuestionIndex < quiz.length - 1) {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        setFeedback('');\r\n      } else {\r\n        setIsCompleted(true);\r\n        setFeedback('Тест пройден');\r\n      }\r\n    } else {\r\n      setFeedback('Ответ неверный');\r\n    }\r\n  };\r\n\r\n  const currentQuestion = quiz[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className='quiz-container'>\r\n      {isCompleted ? (\r\n        <div className='quiz-completed'>{feedback}</div>\r\n      ) : (\r\n        <>\r\n          <div className='quiz-question'>\r\n            <h3>{currentQuestion.question}</h3>\r\n          </div>\r\n          <div className='quiz-options'>\r\n            {currentQuestion.options.map((option, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleOptionClick(option === currentQuestion.answer)}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          {feedback && <div className='quiz-feedback'>{feedback}</div>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}