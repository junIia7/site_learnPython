{"ast":null,"code":"import React from 'react';\nimport '../styles/Lesson-style.css';\nconst VariablesAndDataTypes = () => {\n  //   return (\n  //   <div className=\"lesson-container\">\n  //     <h1>Урок: Переменные и базовые типы данных в Python</h1>\n\n  //     <div className=\"lesson-section\">\n  //       <h2>Введение в переменные и типы данных</h2>\n  //       <p>В программировании переменные используются для хранения данных. В Python переменные создаются \n  //         присваиванием значения имени переменной. Python является языком с динамической типизацией, \n  //         что означает, что тип переменной определяется автоматически во время выполнения.</p>\n  //     </div>\n\n  //     <div className=\"lesson-section\">\n  //       <h2>Создание переменных</h2>\n  //       <p>В Python переменные создаются путем присваивания значения имени переменной с использованием \n  //         знака равенства (`=`). Пример:</p>\n  //       <pre><code>\n  //         {`x = 5\n  // name = \"John\"\n  // is_active = True`}\n  //         </code></pre>\n  //       <p>Здесь:</p>\n  //       <ul>\n  //         <li>`x` - целочисленная переменная (integer),</li>\n  //         <li>`name` - строковая переменная (string),</li>\n  //         <li>`is_active` - логическая переменная (boolean).</li>\n  //       </ul>\n  //     </div>\n\n  //     <div className=\"lesson-section\">\n  //       <h2>Основные типы данных в Python</h2>\n  //       <p>Python поддерживает различные типы данных:</p>\n  //       <ul>\n  //         <li>Целые числа (int)</li>\n  //         <li>Вещественные числа (float)</li>\n  //         <li>Строки (str)</li>\n  //         <li>Логические значения (bool)</li>\n  //       </ul>\n  //       <p>Примеры использования:</p>\n  //       <pre><code>\n  //         {`# Целые числа\n  // age = 25\n\n  // # Вещественные числа\n  // pi = 3.14159\n\n  // # Строки\n  // greeting = \"Привет, мир!\"\n\n  // # Логические значения\n  // is_raining = True`}\n  //       </code></pre>\n  //     </div>\n\n  //     <div className=\"lesson-section\">\n  //       <h2>Преобразование типов данных (Type Casting)</h2>\n  //       <p>Иногда требуется изменить тип данных переменной. Это можно сделать с помощью функций преобразования типов:</p>\n  //       <pre><code>\n  //         {`# Преобразование в целое число\n  // num_str = \"10\"\n  // num_int = int(num_str)  # num_int будет равен 10\n\n  // # Преобразование в вещественное число\n  // num_float = float(num_int)  # num_float будет равен 10.0\n\n  // # Преобразование в строку\n  // result = str(num_float)  # result будет равен \"10.0\"\n\n  // # Преобразование в логическое значение\n  // value = 0\n  // is_valid = bool(value)  # is_valid будет равен False`}\n  //       </code></pre>\n  //     </div>\n  //   </div>\n  //   );\n  // return (\n  //   <div className=\"lesson-container\">\n  //     <h1>Урок: Переменные и базовые типы данных в Python</h1>\n\n  //     {/* Введение в переменные и типы данных */}\n  //     <div className=\"lesson-section\">\n  //       <h2>Введение в переменные и типы данных</h2>\n  //       <p>\n  //         В программировании переменные используются для хранения данных. В Python переменные \n  //         создаются путем присваивания значения имени переменной. Python является языком с динамической \n  //         типизацией, что означает, что тип переменной определяется автоматически во время выполнения.\n  //       </p>\n  //     </div>\n\n  //     {/* Создание переменных */}\n  //     <div className=\"lesson-section\">\n  //       <h2>Создание переменных</h2>\n  //       <p>\n  //         В Python переменные создаются путем присваивания значения имени переменной с использованием знака равенства (`=`).\n  //       </p>\n  //       <pre><code>\n  //         {`x = 5\n  // name = \"John\"\n  // is_active = True`}\n  //       </code></pre>\n  //       <p>\n  //         Здесь:\n  //       </p>\n  //       <ul>\n  //         <li><code>x</code> - целочисленная переменная (integer),</li>\n  //         <li><code>name</code> - строковая переменная (string),</li>\n  //         <li><code>is_active</code> - логическая переменная (boolean).</li>\n  //       </ul>\n  //     </div>\n\n  //     {/* Основные типы данных */}\n  //     <div className=\"lesson-section\">\n  //       <h2>Основные типы данных в Python</h2>\n  //       <p>\n  //         Python поддерживает различные типы данных:\n  //       </p>\n  //       <ul>\n  //         <li><strong>Целые числа (int)</strong> - представляют целые числовые значения, например, <code>age = 25</code>.</li>\n  //         <li><strong>Вещественные числа (float)</strong> - представляют числа с плавающей запятой, например, <code>pi = 3.14159</code>.</li>\n  //         <li><strong>Строки (str)</strong> - представляют текстовые данные, заключенные в кавычки, например, <code>greeting = \"Привет, мир!\"</code>.</li>\n  //         <li><strong>Логические значения (bool)</strong> - представляют логические истины (True) или ложь (False), например, <code>is_raining = True</code>.</li>\n  //       </ul>\n  //     </div>\n\n  //     {/* Преобразование типов данных */}\n  //     <div className=\"lesson-section\">\n  //       <h2>Преобразование типов данных (Type Casting)</h2>\n  //       <p>\n  //         Иногда требуется изменить тип данных переменной. Это можно сделать с помощью функций преобразования типов.\n  //       </p>\n  //       <pre><code>\n  //         {`# Преобразование в целое число\n  // num_str = \"10\"\n  // num_int = int(num_str)  # num_int будет равен 10\n\n  // # Преобразование в вещественное число\n  // num_float = float(num_int)  # num_float будет равен 10.0\n\n  // # Преобразование в строку\n  // result = str(num_float)  # result будет равен \"10.0\"\n\n  // # Преобразование в логическое значение\n  // value = 0\n  // is_valid = bool(value)  # is_valid будет равен False`}\n  //       </code></pre>\n  //     </div>\n  //   </div>\n  // );\n};\n_c = VariablesAndDataTypes;\nexport default VariablesAndDataTypes;\nvar _c;\n$RefreshReg$(_c, \"VariablesAndDataTypes\");","map":{"version":3,"names":["React","VariablesAndDataTypes","_c","$RefreshReg$"],"sources":["C:/Users/kasat/Desktop/praktika_front/src/pages/VariablesAndDataTypes.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/Lesson-style.css';\r\n\r\n\r\nconst VariablesAndDataTypes = () => {\r\n//   return (\r\n//   <div className=\"lesson-container\">\r\n//     <h1>Урок: Переменные и базовые типы данных в Python</h1>\r\n\r\n//     <div className=\"lesson-section\">\r\n//       <h2>Введение в переменные и типы данных</h2>\r\n//       <p>В программировании переменные используются для хранения данных. В Python переменные создаются \r\n//         присваиванием значения имени переменной. Python является языком с динамической типизацией, \r\n//         что означает, что тип переменной определяется автоматически во время выполнения.</p>\r\n//     </div>\r\n\r\n//     <div className=\"lesson-section\">\r\n//       <h2>Создание переменных</h2>\r\n//       <p>В Python переменные создаются путем присваивания значения имени переменной с использованием \r\n//         знака равенства (`=`). Пример:</p>\r\n//       <pre><code>\r\n//         {`x = 5\r\n// name = \"John\"\r\n// is_active = True`}\r\n//         </code></pre>\r\n//       <p>Здесь:</p>\r\n//       <ul>\r\n//         <li>`x` - целочисленная переменная (integer),</li>\r\n//         <li>`name` - строковая переменная (string),</li>\r\n//         <li>`is_active` - логическая переменная (boolean).</li>\r\n//       </ul>\r\n//     </div>\r\n\r\n//     <div className=\"lesson-section\">\r\n//       <h2>Основные типы данных в Python</h2>\r\n//       <p>Python поддерживает различные типы данных:</p>\r\n//       <ul>\r\n//         <li>Целые числа (int)</li>\r\n//         <li>Вещественные числа (float)</li>\r\n//         <li>Строки (str)</li>\r\n//         <li>Логические значения (bool)</li>\r\n//       </ul>\r\n//       <p>Примеры использования:</p>\r\n//       <pre><code>\r\n//         {`# Целые числа\r\n// age = 25\r\n\r\n// # Вещественные числа\r\n// pi = 3.14159\r\n\r\n// # Строки\r\n// greeting = \"Привет, мир!\"\r\n\r\n// # Логические значения\r\n// is_raining = True`}\r\n//       </code></pre>\r\n//     </div>\r\n\r\n//     <div className=\"lesson-section\">\r\n//       <h2>Преобразование типов данных (Type Casting)</h2>\r\n//       <p>Иногда требуется изменить тип данных переменной. Это можно сделать с помощью функций преобразования типов:</p>\r\n//       <pre><code>\r\n//         {`# Преобразование в целое число\r\n// num_str = \"10\"\r\n// num_int = int(num_str)  # num_int будет равен 10\r\n\r\n// # Преобразование в вещественное число\r\n// num_float = float(num_int)  # num_float будет равен 10.0\r\n\r\n// # Преобразование в строку\r\n// result = str(num_float)  # result будет равен \"10.0\"\r\n\r\n// # Преобразование в логическое значение\r\n// value = 0\r\n// is_valid = bool(value)  # is_valid будет равен False`}\r\n//       </code></pre>\r\n//     </div>\r\n//   </div>\r\n//   );\r\n// return (\r\n//   <div className=\"lesson-container\">\r\n//     <h1>Урок: Переменные и базовые типы данных в Python</h1>\r\n\r\n//     {/* Введение в переменные и типы данных */}\r\n//     <div className=\"lesson-section\">\r\n//       <h2>Введение в переменные и типы данных</h2>\r\n//       <p>\r\n//         В программировании переменные используются для хранения данных. В Python переменные \r\n//         создаются путем присваивания значения имени переменной. Python является языком с динамической \r\n//         типизацией, что означает, что тип переменной определяется автоматически во время выполнения.\r\n//       </p>\r\n//     </div>\r\n\r\n//     {/* Создание переменных */}\r\n//     <div className=\"lesson-section\">\r\n//       <h2>Создание переменных</h2>\r\n//       <p>\r\n//         В Python переменные создаются путем присваивания значения имени переменной с использованием знака равенства (`=`).\r\n//       </p>\r\n//       <pre><code>\r\n//         {`x = 5\r\n// name = \"John\"\r\n// is_active = True`}\r\n//       </code></pre>\r\n//       <p>\r\n//         Здесь:\r\n//       </p>\r\n//       <ul>\r\n//         <li><code>x</code> - целочисленная переменная (integer),</li>\r\n//         <li><code>name</code> - строковая переменная (string),</li>\r\n//         <li><code>is_active</code> - логическая переменная (boolean).</li>\r\n//       </ul>\r\n//     </div>\r\n\r\n//     {/* Основные типы данных */}\r\n//     <div className=\"lesson-section\">\r\n//       <h2>Основные типы данных в Python</h2>\r\n//       <p>\r\n//         Python поддерживает различные типы данных:\r\n//       </p>\r\n//       <ul>\r\n//         <li><strong>Целые числа (int)</strong> - представляют целые числовые значения, например, <code>age = 25</code>.</li>\r\n//         <li><strong>Вещественные числа (float)</strong> - представляют числа с плавающей запятой, например, <code>pi = 3.14159</code>.</li>\r\n//         <li><strong>Строки (str)</strong> - представляют текстовые данные, заключенные в кавычки, например, <code>greeting = \"Привет, мир!\"</code>.</li>\r\n//         <li><strong>Логические значения (bool)</strong> - представляют логические истины (True) или ложь (False), например, <code>is_raining = True</code>.</li>\r\n//       </ul>\r\n//     </div>\r\n\r\n//     {/* Преобразование типов данных */}\r\n//     <div className=\"lesson-section\">\r\n//       <h2>Преобразование типов данных (Type Casting)</h2>\r\n//       <p>\r\n//         Иногда требуется изменить тип данных переменной. Это можно сделать с помощью функций преобразования типов.\r\n//       </p>\r\n//       <pre><code>\r\n//         {`# Преобразование в целое число\r\n// num_str = \"10\"\r\n// num_int = int(num_str)  # num_int будет равен 10\r\n\r\n// # Преобразование в вещественное число\r\n// num_float = float(num_int)  # num_float будет равен 10.0\r\n\r\n// # Преобразование в строку\r\n// result = str(num_float)  # result будет равен \"10.0\"\r\n\r\n// # Преобразование в логическое значение\r\n// value = 0\r\n// is_valid = bool(value)  # is_valid будет равен False`}\r\n//       </code></pre>\r\n//     </div>\r\n//   </div>\r\n// );\r\n};\r\n\r\nexport default VariablesAndDataTypes;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,4BAA4B;AAGnC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EACppJID,qBAAqB;AAsJ3B,eAAeA,qBAAqB;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}