{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasat\\\\Desktop\\\\praktika_front\\\\src\\\\components\\\\AddLesson.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../styles/AddLesson.css';\n\n// function AddLesson() {\n//   const [title, setTitle] = useState('');\n//   const [content, setContent] = useState([]);\n\n//   // const [showQuiz, setShowQuiz] = useState(false);\n//   // const [quizzes, setQuizzes] = useState([]);\n\n//   // const [showCodeExecutor, setShowCodeExecutor] = useState(false);\n//   // const [codeExecutor, setCodeExecutor] = useState({\n//   //   file: '',\n//   //   taskDescription: '',\n//   //   taskInputFormat: '',\n//   //   taskOutputFormat: '',\n//   //   taskExample: { input: '', output: '' }\n//   // });\n//   // const [quizCount, setQuizCount] = useState(0); // Переменная для хранения количества Quiz\n\n//   const handleQuizChange = (index, event) => {\n//     const newQuizzes = [...quizzes];\n//     if (event.target.name === 'options') {\n//       const optionIndex = parseInt(event.target.dataset.index);\n//       newQuizzes[index].options[optionIndex] = event.target.value;\n//     } else {\n//       newQuizzes[index][event.target.name] = event.target.value;\n//     }\n//     setQuizzes(newQuizzes);\n//   };\n\n//   const handleCodeExecutorChange = (event) => {\n//     const { name, value } = event.target;\n//     setCodeExecutor((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleTaskExampleChange = (event) => {\n//     const { name, value } = event.target;\n//     setCodeExecutor((prev) => ({\n//       ...prev,\n//       taskExample: {\n//         ...prev.taskExample,\n//         [name]: value,\n//       },\n//     }));\n//   };\n\n//   // Функция для обновления значения элемента контента\n//   const handleContentChange = (index, value) => {\n//     setContent(prevContent => {\n//       const updatedContent = [...prevContent];\n//       updatedContent[index].value = value;\n//       return updatedContent;\n//     });\n//   };\n\n//   const handleListItemChange = (sectionIndex, itemIndex, event) => {\n//     const { value } = event.target;\n//     const updatedSections = [...sections];\n//     updatedSections[sectionIndex].list.items[itemIndex] = value;\n//     setSections(updatedSections);\n//   };\n\n//   const addSection = () => {\n//     setSections([...sections, { subtitle: '', content: '' }]);\n//   };\n\n//   const addQuiz = () => {\n//     setQuizzes([...quizzes, { question: '', options: ['', ''], answer: '' }]);\n//     setQuizCount((prevCount) => prevCount + 1);\n//     setShowQuiz(true); // Показываем Quiz при добавлении первого элемента\n//   };\n\n//   const addOption = (quizIndex) => {\n//     const newQuizzes = [...quizzes];\n//     newQuizzes[quizIndex].options.push('');\n//     setQuizzes(newQuizzes);\n//   };\n\n//   const addCodeExecutor = () => {\n//     setShowCodeExecutor(true);\n//   };\n\n//   const addContentItem = (type) => {\n//     let newContent;\n//     if (type === 'list') {\n//       newContent = {\n//         type,\n//         list: {\n//           items: [`Элемент 1`, `Элемент 2`]\n//         }\n//       };\n//     } else {\n//       newContent = {\n//         type,\n//         value: ''\n//       };\n//     }\n\n//     setSections(prevSections => [\n//       ...prevSections,\n//       newContent\n//     ]);\n//   };\n\n//   const addListItem = (sectionIndex) => {\n//     const updatedSections = [...sections];\n//     updatedSections[sectionIndex].list.items.push(`Элемент ${updatedSections[sectionIndex].list.items.length + 1}`);\n//     setSections(updatedSections);\n//   };\n\n//   const removeOption = (quizIndex, optionIndex) => {\n//     const newQuizzes = [...quizzes];\n//     newQuizzes[quizIndex].options.splice(optionIndex, 1);\n//     setQuizzes(newQuizzes);\n//   };\n\n//   const removeQuiz = () => {\n//     const newQuizzes = [...quizzes];\n//     newQuizzes.pop(); // Удаляем последний Quiz\n//     setQuizzes(newQuizzes);\n//     setQuizCount((prevCount) => prevCount - 1);\n//     if (quizCount === 1) {\n//       setShowQuiz(false); // Скрываем Quiz при удалении единственного элемента\n//     }\n//   };\n\n//   const removeCodeExecutor = () => {\n//     setCodeExecutor({\n//       file: '',\n//       taskDescription: '',\n//       taskInputFormat: '',\n//       taskOutputFormat: '',\n//       taskExample: { input: '', output: '' }\n//     });\n//     setShowCodeExecutor(false); // Скрываем Code Executor при удалении\n//   };\n\n//   // Функция для удаления элемента контента по индексу\n//   const removeContentItem = (index) => {\n//     setSections(prevSections => {\n//       const updatedSections = [...prevSections];\n//       updatedSections.splice(index, 1);\n//       return updatedSections;\n//     });\n//   };\n\n//   const removeListItem = (sectionIndex, itemIndex) => {\n//     if (sections[sectionIndex].list.items.length > 2) { // Ensure at least two items are present\n//       const updatedSections = [...sections];\n//       updatedSections[sectionIndex].list.items.splice(itemIndex, 1);\n//       setSections(updatedSections);\n//     }\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"title\">Title:</label>\n//           <input\n//             type=\"text\"\n//             id=\"title\"\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         {content.map((section, index) => (\n//           <div key={index} className=\"form-group\">\n//             {section.type === 'text' && (\n//               <div>\n//                 <label>Текст:</label>\n//                 <textarea\n//                   value={section.value}\n//                   onChange={(e) => handleContentChange(index, e.target.value)}\n//                   required\n//                 />\n//               </div>\n//             )}\n\n//             {section.type === 'list' && (\n//               <div>\n//                 <label>Список:</label>\n//                 <ul>\n//                   {section.list.items.map((item, itemIndex) => (\n//                     <li key={itemIndex}>\n//                       <input\n//                         type=\"text\"\n//                         value={item}\n//                         onChange={(e) => handleListItemChange(index, itemIndex, e)}\n//                         placeholder={`Элемент ${itemIndex + 1}`}\n//                       />\n//                       {itemIndex > 1 && (  // ensure minimum two items exist before showing the delete button\n//                         <button type=\"button\" onClick={() => removeListItem(index, itemIndex)}>\n//                           Удалить элемент\n//                         </button>\n//                       )}\n//                     </li>\n//                   ))}\n//                 </ul>\n//                 <div>\n//                   <button type=\"button\" onClick={() => addListItem(index)}>\n//                     Добавить элемент\n//                   </button>\n//                 </div>\n//               </div>\n//             )}\n\n//             {section.type === 'code' && (\n//               <div>\n//                 <label>Code Block:</label>\n//                 <textarea\n//                   value={section.value}\n//                   onChange={(e) => handleContentChange(index, e.target.value)}\n//                   required\n//                 />\n//               </div>\n//             )}\n//             {sections.length && \n//               <button type=\"button\" onClick={() => removeContentItem(index)}>\n//                 Remove Content\n//               </button>\n//             }       \n//           </div>\n//         ))}\n\n//         <div>\n//           <button type=\"button\" onClick={() => addContentItem('text')}>Добавить текст</button>\n//           <button type=\"button\" onClick={() => addContentItem('list')}>Добавить список</button>\n//           <button type=\"button\" onClick={() => addContentItem('code')}>Добавить код</button>\n//         </div>\n\n//         <button type=\"button\" className=\"add-section-button\" onClick={addSection}>\n//           Add Section\n//         </button>\n\n//         {!showQuiz && (\n//           <button type=\"button\" className=\"add-section-button\" onClick={addQuiz}>\n//             Add Quiz\n//           </button>\n//         )}\n\n//         {showQuiz && (\n\n// )}\n\n//         {!showCodeExecutor && (\n//           <button type=\"button\" className=\"add-section-button\" onClick={addCodeExecutor}>\n//             Add Code Executor\n//           </button>\n//         )}\n\n//         {showCodeExecutor && (\n//           <div className=\"form-group\">\n//             <label htmlFor=\"file\">Code Executor File:</label>\n//             <input\n//               type=\"text\"\n//               id=\"file\"\n//               name=\"file\"\n//               value={codeExecutor.file}\n//               onChange={handleCodeExecutorChange}\n//               required\n//             />\n//             <label htmlFor=\"taskDescription\">Task Description:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskDescription\"\n//               name=\"taskDescription\"\n//               value={codeExecutor.taskDescription}\n//               onChange={handleCodeExecutorChange}\n//               required\n//             />\n//             <label htmlFor=\"taskInputFormat\">Task Input Format:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskInputFormat\"\n//               name=\"taskInputFormat\"\n//               value={codeExecutor.taskInputFormat}\n//               onChange={handleCodeExecutorChange}\n//               required\n//             />\n//             <label htmlFor=\"taskOutputFormat\">Task Output Format:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskOutputFormat\"\n//               name=\"taskOutputFormat\"\n//               value={codeExecutor.taskOutputFormat}\n//               onChange={handleCodeExecutorChange}\n//               required\n//             />\n//             <label htmlFor=\"taskExampleInput\">Task Example Input:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskExampleInput\"\n//               name=\"input\"\n//               value={codeExecutor.taskExample.input}\n//               onChange={handleTaskExampleChange}\n//               required\n//             />\n//             <label htmlFor=\"taskExampleOutput\">Task Example Output:</label>\n//             <input\n//               type=\"text\"\n//               id=\"taskExampleOutput\"\n//               name=\"output\"\n//               value={codeExecutor.taskExample.output}\n//               onChange={handleTaskExampleChange}\n//               required\n//             />\n//             <button type=\"button\" onClick={removeCodeExecutor}>\n//               Remove Code Executor\n//             </button>\n//           </div>\n//         )}\n\n//         <div className=\"button-container\">\n//           <button type=\"submit\">Add Lesson</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AddLesson;\n\nimport React, { useState } from 'react';\nimport '../styles/AddLesson.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddLesson = () => {\n  _s();\n  const [lesson, setLesson] = useState({\n    title: '',\n    content: []\n  });\n  const handleTitleChange = e => {\n    setLesson({\n      ...lesson,\n      title: e.target.value\n    });\n  };\n  const handleContentChange = (index, type, value) => {\n    const newContent = [...lesson.content];\n    newContent[index][type] = value;\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const addContentItem = type => {\n    let newContentItem;\n    switch (type) {\n      case 'text':\n        newContentItem = {\n          type,\n          text: ''\n        };\n        break;\n      case 'list':\n        newContentItem = {\n          type,\n          list: {\n            items: ['']\n          }\n        };\n        break;\n      case 'code':\n        newContentItem = {\n          type,\n          code: ''\n        };\n        break;\n      case 'subtitle':\n        newContentItem = {\n          type,\n          subtitle: ''\n        };\n        break;\n      case 'quizzes':\n        newContentItem = {\n          type,\n          quizzes: [{\n            question: '',\n            options: [''],\n            answer: ''\n          }]\n        };\n        break;\n      case 'codeExecutor':\n        newContentItem = {\n          type,\n          codeExecutor: {\n            test: [{\n              input: '',\n              expectedOutput: ''\n            }],\n            taskDescription: '',\n            taskInputFormat: '',\n            taskOutputFormat: '',\n            taskExample: {\n              input: '',\n              output: ''\n            }\n          }\n        };\n        break;\n      default:\n        return;\n    }\n    setLesson({\n      ...lesson,\n      content: [...lesson.content, newContentItem]\n    });\n  };\n  const removeContentItem = index => {\n    const newContent = [...lesson.content];\n    newContent.splice(index, 1);\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const handleListItemChange = (sectionIndex, itemIndex, event) => {\n    const {\n      value\n    } = event.target;\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].list.items[itemIndex] = value;\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const addListItem = sectionIndex => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].list.items.push('');\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const removeListItem = (sectionIndex, itemIndex) => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].list.items.splice(itemIndex, 1);\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const handleQuizChange = (sectionIndex, quizIndex, event) => {\n    const {\n      name,\n      value,\n      dataset\n    } = event.target;\n    const newContent = [...lesson.content];\n    if (name === 'options') {\n      const optionIndex = dataset.index;\n      newContent[sectionIndex].quizzes[quizIndex].options[optionIndex] = value;\n    } else {\n      newContent[sectionIndex].quizzes[quizIndex][name] = value;\n    }\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const addOption = (sectionIndex, quizIndex) => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].quizzes[quizIndex].options.push('');\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const removeOption = (sectionIndex, quizIndex, optionIndex) => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].quizzes[quizIndex].options.splice(optionIndex, 1);\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const handleCodeExecutorChange = (sectionIndex, field, value) => {\n    console.log(field);\n    console.log(value);\n    const newContent = [...lesson.content];\n    if (field === 'taskExample.input') newContent[sectionIndex].codeExecutor['taskExample']['input'] = value;else if (field === 'taskExample.output') newContent[sectionIndex].codeExecutor['taskExample']['output'] = value;else newContent[sectionIndex].codeExecutor[field] = value;\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const addCodeExecutorTest = sectionIndex => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].codeExecutor.test.push({\n      input: '',\n      expectedOutput: ''\n    });\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const removeCodeExecutorTest = (sectionIndex, testIndex) => {\n    const newContent = [...lesson.content];\n    newContent[sectionIndex].codeExecutor.test.splice(testIndex, 1);\n    setLesson({\n      ...lesson,\n      content: newContent\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/api/lessons', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(lesson)\n      });\n      if (response.ok) {\n        alert('Lesson successfully submitted!');\n      } else {\n        throw new Error('Failed to submit lesson');\n      }\n    } catch (error) {\n      console.error('Error submitting lesson:', error);\n      alert('Error submitting lesson. Please try again later.');\n    }\n  };\n  const renderSection = (section, index) => {\n    switch (section.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: section.text,\n            onChange: e => handleContentChange(index, 'text', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this);\n      case 'list':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: section.list.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: item,\n                onChange: e => handleListItemChange(index, itemIndex, e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeListItem(index, itemIndex),\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this)]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => addListItem(index),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this);\n      case 'code':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u041A\\u043E\\u0434:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: section.code,\n            onChange: e => handleContentChange(index, 'code', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this);\n      case 'subtitle':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u041F\\u043E\\u0434\\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: section.subtitle,\n            onChange: e => handleContentChange(index, 'subtitle', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this);\n      case 'quizzes':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440\\u0438\\u043D\\u044B:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: section.quizzes.map((quiz, quizIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `question-${quizIndex}`,\n                children: \"Question:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `question-${quizIndex}`,\n                name: \"question\",\n                value: quiz.question,\n                onChange: e => handleQuizChange(index, quizIndex, e),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 19\n              }, this), quiz.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `option-${quizIndex}-${optionIndex}`,\n                  children: [\"Option \", optionIndex + 1, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: `option-${quizIndex}-${optionIndex}`,\n                  name: \"options\",\n                  \"data-index\": optionIndex,\n                  value: option,\n                  onChange: e => handleQuizChange(index, quizIndex, e),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => removeOption(index, quizIndex, optionIndex),\n                  children: \"Remove Option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 23\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => addOption(index, quizIndex),\n                children: \"Add Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `answer-${quizIndex}`,\n                children: \"Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `answer-${quizIndex}`,\n                name: \"answer\",\n                value: quiz.answer,\n                onChange: e => handleQuizChange(index, quizIndex, e),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this)]\n            }, quizIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this))\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this);\n      case 'codeExecutor':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043E\\u0434\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: section.codeExecutor.taskDescription,\n              onChange: e => handleCodeExecutorChange(index, 'taskDescription', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442 \\u0432\\u0432\\u043E\\u0434\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: section.codeExecutor.taskInputFormat,\n              onChange: e => handleCodeExecutorChange(index, 'taskInputFormat', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442 \\u0432\\u044B\\u0432\\u043E\\u0434\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: section.codeExecutor.taskOutputFormat,\n              onChange: e => handleCodeExecutorChange(index, 'taskOutputFormat', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0440:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\u0412\\u0432\\u043E\\u0434:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: section.codeExecutor.taskExample.input,\n                onChange: e => handleCodeExecutorChange(index, 'taskExample.input', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\u0412\\u044B\\u0432\\u043E\\u0434:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: section.codeExecutor.taskExample.output,\n                onChange: e => handleCodeExecutorChange(index, 'taskExample.output', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0422\\u0435\\u0441\\u0442\\u044B:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this), section.codeExecutor.test.map((test, testIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"\\u0412\\u0432\\u043E\\u0434:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: test.input,\n                  onChange: e => handleCodeExecutorChange(index, `test.${testIndex}.input`, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"\\u041E\\u0436\\u0438\\u0434\\u0430\\u0435\\u043C\\u044B\\u0439 \\u0432\\u044B\\u0432\\u043E\\u0434:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: test.expectedOutput,\n                  onChange: e => handleCodeExecutorChange(index, `test.${testIndex}.expectedOutput`, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeCodeExecutorTest(index, testIndex),\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }, this)]\n            }, testIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => addCodeExecutorTest(index),\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeContentItem(index),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-lesson-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lesson-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0443\\u0440\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u0443\\u0440\\u043E\\u043A\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: lesson.title,\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lesson-content\",\n      children: lesson.content.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lesson-section\",\n        children: renderSection(section, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('text'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('list'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('code'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('subtitle'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u0434\\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('quizzes'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0438\\u043A\\u0442\\u043E\\u0440\\u0438\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addContentItem('codeExecutor'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043E\\u0434\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 669,\n    columnNumber: 5\n  }, this);\n};\n_s(AddLesson, \"aobYbLvm3f4TnAcDXUShsGUF+rs=\");\n_c = AddLesson;\nexport default AddLesson;\nvar _c;\n$RefreshReg$(_c, \"AddLesson\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AddLesson","_s","lesson","setLesson","title","content","handleTitleChange","e","target","value","handleContentChange","index","type","newContent","addContentItem","newContentItem","text","list","items","code","subtitle","quizzes","question","options","answer","codeExecutor","test","input","expectedOutput","taskDescription","taskInputFormat","taskOutputFormat","taskExample","output","removeContentItem","splice","handleListItemChange","sectionIndex","itemIndex","event","addListItem","push","removeListItem","handleQuizChange","quizIndex","name","dataset","optionIndex","addOption","removeOption","handleCodeExecutorChange","field","console","log","addCodeExecutorTest","removeCodeExecutorTest","testIndex","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","alert","Error","error","renderSection","section","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","map","item","quiz","className","htmlFor","id","required","option","_c","$RefreshReg$"],"sources":["C:/Users/kasat/Desktop/praktika_front/src/components/AddLesson.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../styles/AddLesson.css';\r\n\r\n// function AddLesson() {\r\n//   const [title, setTitle] = useState('');\r\n//   const [content, setContent] = useState([]);\r\n  \r\n//   // const [showQuiz, setShowQuiz] = useState(false);\r\n//   // const [quizzes, setQuizzes] = useState([]);\r\n\r\n//   // const [showCodeExecutor, setShowCodeExecutor] = useState(false);\r\n//   // const [codeExecutor, setCodeExecutor] = useState({\r\n//   //   file: '',\r\n//   //   taskDescription: '',\r\n//   //   taskInputFormat: '',\r\n//   //   taskOutputFormat: '',\r\n//   //   taskExample: { input: '', output: '' }\r\n//   // });\r\n//   // const [quizCount, setQuizCount] = useState(0); // Переменная для хранения количества Quiz\r\n\r\n//   const handleQuizChange = (index, event) => {\r\n//     const newQuizzes = [...quizzes];\r\n//     if (event.target.name === 'options') {\r\n//       const optionIndex = parseInt(event.target.dataset.index);\r\n//       newQuizzes[index].options[optionIndex] = event.target.value;\r\n//     } else {\r\n//       newQuizzes[index][event.target.name] = event.target.value;\r\n//     }\r\n//     setQuizzes(newQuizzes);\r\n//   };\r\n\r\n//   const handleCodeExecutorChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setCodeExecutor((prev) => ({\r\n//       ...prev,\r\n//       [name]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleTaskExampleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setCodeExecutor((prev) => ({\r\n//       ...prev,\r\n//       taskExample: {\r\n//         ...prev.taskExample,\r\n//         [name]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   // Функция для обновления значения элемента контента\r\n//   const handleContentChange = (index, value) => {\r\n//     setContent(prevContent => {\r\n//       const updatedContent = [...prevContent];\r\n//       updatedContent[index].value = value;\r\n//       return updatedContent;\r\n//     });\r\n//   };\r\n\r\n//   const handleListItemChange = (sectionIndex, itemIndex, event) => {\r\n//     const { value } = event.target;\r\n//     const updatedSections = [...sections];\r\n//     updatedSections[sectionIndex].list.items[itemIndex] = value;\r\n//     setSections(updatedSections);\r\n//   };\r\n\r\n//   const addSection = () => {\r\n//     setSections([...sections, { subtitle: '', content: '' }]);\r\n//   };\r\n\r\n//   const addQuiz = () => {\r\n//     setQuizzes([...quizzes, { question: '', options: ['', ''], answer: '' }]);\r\n//     setQuizCount((prevCount) => prevCount + 1);\r\n//     setShowQuiz(true); // Показываем Quiz при добавлении первого элемента\r\n//   };\r\n\r\n//   const addOption = (quizIndex) => {\r\n//     const newQuizzes = [...quizzes];\r\n//     newQuizzes[quizIndex].options.push('');\r\n//     setQuizzes(newQuizzes);\r\n//   };\r\n\r\n//   const addCodeExecutor = () => {\r\n//     setShowCodeExecutor(true);\r\n//   };\r\n  \r\n//   const addContentItem = (type) => {\r\n//     let newContent;\r\n//     if (type === 'list') {\r\n//       newContent = {\r\n//         type,\r\n//         list: {\r\n//           items: [`Элемент 1`, `Элемент 2`]\r\n//         }\r\n//       };\r\n//     } else {\r\n//       newContent = {\r\n//         type,\r\n//         value: ''\r\n//       };\r\n//     }\r\n    \r\n//     setSections(prevSections => [\r\n//       ...prevSections,\r\n//       newContent\r\n//     ]);\r\n//   };\r\n\r\n//   const addListItem = (sectionIndex) => {\r\n//     const updatedSections = [...sections];\r\n//     updatedSections[sectionIndex].list.items.push(`Элемент ${updatedSections[sectionIndex].list.items.length + 1}`);\r\n//     setSections(updatedSections);\r\n//   };\r\n\r\n//   const removeOption = (quizIndex, optionIndex) => {\r\n//     const newQuizzes = [...quizzes];\r\n//     newQuizzes[quizIndex].options.splice(optionIndex, 1);\r\n//     setQuizzes(newQuizzes);\r\n//   };\r\n\r\n//   const removeQuiz = () => {\r\n//     const newQuizzes = [...quizzes];\r\n//     newQuizzes.pop(); // Удаляем последний Quiz\r\n//     setQuizzes(newQuizzes);\r\n//     setQuizCount((prevCount) => prevCount - 1);\r\n//     if (quizCount === 1) {\r\n//       setShowQuiz(false); // Скрываем Quiz при удалении единственного элемента\r\n//     }\r\n//   };\r\n\r\n//   const removeCodeExecutor = () => {\r\n//     setCodeExecutor({\r\n//       file: '',\r\n//       taskDescription: '',\r\n//       taskInputFormat: '',\r\n//       taskOutputFormat: '',\r\n//       taskExample: { input: '', output: '' }\r\n//     });\r\n//     setShowCodeExecutor(false); // Скрываем Code Executor при удалении\r\n//   };\r\n\r\n//   // Функция для удаления элемента контента по индексу\r\n//   const removeContentItem = (index) => {\r\n//     setSections(prevSections => {\r\n//       const updatedSections = [...prevSections];\r\n//       updatedSections.splice(index, 1);\r\n//       return updatedSections;\r\n//     });\r\n//   };\r\n\r\n//   const removeListItem = (sectionIndex, itemIndex) => {\r\n//     if (sections[sectionIndex].list.items.length > 2) { // Ensure at least two items are present\r\n//       const updatedSections = [...sections];\r\n//       updatedSections[sectionIndex].list.items.splice(itemIndex, 1);\r\n//       setSections(updatedSections);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"form-container\">\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"title\">Title:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"title\"\r\n//             value={title}\r\n//             onChange={(e) => setTitle(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {content.map((section, index) => (\r\n//           <div key={index} className=\"form-group\">\r\n//             {section.type === 'text' && (\r\n//               <div>\r\n//                 <label>Текст:</label>\r\n//                 <textarea\r\n//                   value={section.value}\r\n//                   onChange={(e) => handleContentChange(index, e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//             )}\r\n\r\n//             {section.type === 'list' && (\r\n//               <div>\r\n//                 <label>Список:</label>\r\n//                 <ul>\r\n//                   {section.list.items.map((item, itemIndex) => (\r\n//                     <li key={itemIndex}>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={item}\r\n//                         onChange={(e) => handleListItemChange(index, itemIndex, e)}\r\n//                         placeholder={`Элемент ${itemIndex + 1}`}\r\n//                       />\r\n//                       {itemIndex > 1 && (  // ensure minimum two items exist before showing the delete button\r\n//                         <button type=\"button\" onClick={() => removeListItem(index, itemIndex)}>\r\n//                           Удалить элемент\r\n//                         </button>\r\n//                       )}\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//                 <div>\r\n//                   <button type=\"button\" onClick={() => addListItem(index)}>\r\n//                     Добавить элемент\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n\r\n//             {section.type === 'code' && (\r\n//               <div>\r\n//                 <label>Code Block:</label>\r\n//                 <textarea\r\n//                   value={section.value}\r\n//                   onChange={(e) => handleContentChange(index, e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//             {sections.length && \r\n//               <button type=\"button\" onClick={() => removeContentItem(index)}>\r\n//                 Remove Content\r\n//               </button>\r\n//             }       \r\n//           </div>\r\n//         ))}\r\n\r\n//         <div>\r\n//           <button type=\"button\" onClick={() => addContentItem('text')}>Добавить текст</button>\r\n//           <button type=\"button\" onClick={() => addContentItem('list')}>Добавить список</button>\r\n//           <button type=\"button\" onClick={() => addContentItem('code')}>Добавить код</button>\r\n//         </div>\r\n\r\n//         <button type=\"button\" className=\"add-section-button\" onClick={addSection}>\r\n//           Add Section\r\n//         </button>\r\n\r\n//         {!showQuiz && (\r\n//           <button type=\"button\" className=\"add-section-button\" onClick={addQuiz}>\r\n//             Add Quiz\r\n//           </button>\r\n//         )}\r\n\r\n//         {showQuiz && (\r\n          \r\n        // )}\r\n\r\n//         {!showCodeExecutor && (\r\n//           <button type=\"button\" className=\"add-section-button\" onClick={addCodeExecutor}>\r\n//             Add Code Executor\r\n//           </button>\r\n//         )}\r\n\r\n//         {showCodeExecutor && (\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"file\">Code Executor File:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"file\"\r\n//               name=\"file\"\r\n//               value={codeExecutor.file}\r\n//               onChange={handleCodeExecutorChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskDescription\">Task Description:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskDescription\"\r\n//               name=\"taskDescription\"\r\n//               value={codeExecutor.taskDescription}\r\n//               onChange={handleCodeExecutorChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskInputFormat\">Task Input Format:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskInputFormat\"\r\n//               name=\"taskInputFormat\"\r\n//               value={codeExecutor.taskInputFormat}\r\n//               onChange={handleCodeExecutorChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskOutputFormat\">Task Output Format:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskOutputFormat\"\r\n//               name=\"taskOutputFormat\"\r\n//               value={codeExecutor.taskOutputFormat}\r\n//               onChange={handleCodeExecutorChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskExampleInput\">Task Example Input:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskExampleInput\"\r\n//               name=\"input\"\r\n//               value={codeExecutor.taskExample.input}\r\n//               onChange={handleTaskExampleChange}\r\n//               required\r\n//             />\r\n//             <label htmlFor=\"taskExampleOutput\">Task Example Output:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"taskExampleOutput\"\r\n//               name=\"output\"\r\n//               value={codeExecutor.taskExample.output}\r\n//               onChange={handleTaskExampleChange}\r\n//               required\r\n//             />\r\n//             <button type=\"button\" onClick={removeCodeExecutor}>\r\n//               Remove Code Executor\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         <div className=\"button-container\">\r\n//           <button type=\"submit\">Add Lesson</button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AddLesson;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport '../styles/AddLesson.css';\r\n\r\nconst AddLesson = () => {\r\n  const [lesson, setLesson] = useState({\r\n    title: '',\r\n    content: []\r\n  });\r\n\r\n  const handleTitleChange = (e) => {\r\n    setLesson({ ...lesson, title: e.target.value });\r\n  };\r\n\r\n  const handleContentChange = (index, type, value) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[index][type] = value;\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const addContentItem = (type) => {\r\n    let newContentItem;\r\n    switch (type) {\r\n      case 'text':\r\n        newContentItem = { type, text: '' };\r\n        break;\r\n      case 'list':\r\n        newContentItem = { type, list: { items: [''] } };\r\n        break;\r\n      case 'code':\r\n        newContentItem = { type, code: '' };\r\n        break;\r\n      case 'subtitle':\r\n        newContentItem = { type, subtitle: '' };\r\n        break;\r\n      case 'quizzes':\r\n        newContentItem = { type, quizzes: [{ question: '', options: [''], answer: '' }] };\r\n        break;\r\n      case 'codeExecutor':\r\n        newContentItem = { \r\n          type, \r\n          codeExecutor: { \r\n            test: [{ input: '', expectedOutput: '' }], \r\n            taskDescription: '', \r\n            taskInputFormat: '', \r\n            taskOutputFormat: '', \r\n            taskExample: { input: '', output: '' } \r\n          } \r\n        };\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setLesson({ ...lesson, content: [...lesson.content, newContentItem] });\r\n  };\r\n\r\n  const removeContentItem = (index) => {\r\n    const newContent = [...lesson.content];\r\n    newContent.splice(index, 1);\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const handleListItemChange = (sectionIndex, itemIndex, event) => {\r\n    const { value } = event.target;\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].list.items[itemIndex] = value;\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const addListItem = (sectionIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].list.items.push('');\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const removeListItem = (sectionIndex, itemIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].list.items.splice(itemIndex, 1);\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const handleQuizChange = (sectionIndex, quizIndex, event) => {\r\n    const { name, value, dataset } = event.target;\r\n    const newContent = [...lesson.content];\r\n    if (name === 'options') {\r\n      const optionIndex = dataset.index;\r\n      newContent[sectionIndex].quizzes[quizIndex].options[optionIndex] = value;\r\n    } else {\r\n      newContent[sectionIndex].quizzes[quizIndex][name] = value;\r\n    }\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const addOption = (sectionIndex, quizIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].quizzes[quizIndex].options.push('');\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const removeOption = (sectionIndex, quizIndex, optionIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].quizzes[quizIndex].options.splice(optionIndex, 1);\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const handleCodeExecutorChange = (sectionIndex, field, value) => {\r\n    console.log(field)\r\n    console.log(value)\r\n    const newContent = [...lesson.content];\r\n    if(field === 'taskExample.input')\r\n      newContent[sectionIndex].codeExecutor['taskExample']['input'] = value\r\n    else if (field === 'taskExample.output')\r\n      newContent[sectionIndex].codeExecutor['taskExample']['output'] = value\r\n    else\r\n      newContent[sectionIndex].codeExecutor[field] = value;\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const addCodeExecutorTest = (sectionIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].codeExecutor.test.push({ input: '', expectedOutput: '' });\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const removeCodeExecutorTest = (sectionIndex, testIndex) => {\r\n    const newContent = [...lesson.content];\r\n    newContent[sectionIndex].codeExecutor.test.splice(testIndex, 1);\r\n    setLesson({ ...lesson, content: newContent });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/lessons', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(lesson),\r\n      });\r\n      if (response.ok) {\r\n        alert('Lesson successfully submitted!');\r\n      } else {\r\n        throw new Error('Failed to submit lesson');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting lesson:', error);\r\n      alert('Error submitting lesson. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const renderSection = (section, index) => {\r\n    switch (section.type) {\r\n      case 'text':\r\n        return (\r\n          <div key={index}>\r\n            <label>Text:</label>\r\n            <textarea\r\n              value={section.text}\r\n              onChange={(e) => handleContentChange(index, 'text', e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'list':\r\n        return (\r\n          <div key={index}>\r\n            <label>Список:</label>\r\n            <ul>\r\n              {section.list.items.map((item, itemIndex) => (\r\n                <li key={itemIndex}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={item}\r\n                    onChange={(e) => handleListItemChange(index, itemIndex, e)}\r\n                  />\r\n                  <button type=\"button\" onClick={() => removeListItem(index, itemIndex)}>Удалить элемент</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <button type=\"button\" onClick={() => addListItem(index)}>Добавить элемент</button>\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'code':\r\n        return (\r\n          <div key={index}>\r\n            <label>Код:</label>\r\n            <textarea\r\n              value={section.code}\r\n              onChange={(e) => handleContentChange(index, 'code', e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'subtitle':\r\n        return (\r\n          <div key={index}>\r\n            <label>Подзаголовок:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={section.subtitle}\r\n              onChange={(e) => handleContentChange(index, 'subtitle', e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'quizzes':\r\n        return (\r\n          <div key={index}>\r\n            <label>Викторины:</label>\r\n            <>\r\n              {section.quizzes.map((quiz, quizIndex) => (\r\n                <div key={quizIndex} className=\"form-group\">\r\n                  <label htmlFor={`question-${quizIndex}`}>Question:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id={`question-${quizIndex}`}\r\n                    name=\"question\"\r\n                    value={quiz.question}\r\n                    onChange={(e) => handleQuizChange(index, quizIndex, e)}\r\n                    required\r\n                  />\r\n                  {quiz.options.map((option, optionIndex) => (\r\n                    <div key={optionIndex} className=\"option-group\">\r\n                      <label htmlFor={`option-${quizIndex}-${optionIndex}`}>Option {optionIndex + 1}:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id={`option-${quizIndex}-${optionIndex}`}\r\n                        name=\"options\"\r\n                        data-index={optionIndex}\r\n                        value={option}\r\n                        onChange={(e) => handleQuizChange(index, quizIndex, e)}\r\n                        required\r\n                      />\r\n                      <button type=\"button\" onClick={() => removeOption(index, quizIndex, optionIndex)}>\r\n                        Remove Option\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                  <button type=\"button\" onClick={() => addOption(index, quizIndex)}>\r\n                    Add Option\r\n                  </button>\r\n                  <label htmlFor={`answer-${quizIndex}`}>Answer:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id={`answer-${quizIndex}`}\r\n                    name=\"answer\"\r\n                    value={quiz.answer}\r\n                    onChange={(e) => handleQuizChange(index, quizIndex, e)}\r\n                    required\r\n                  />\r\n                </div>\r\n              ))}\r\n            </>\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      case 'codeExecutor':\r\n        return (  \r\n          <div key={index}>\r\n            <label>Выполнение кода:</label>\r\n            <div className=\"form-group\">\r\n              <label>Описание задачи:</label>\r\n              <textarea\r\n                value={section.codeExecutor.taskDescription}\r\n                onChange={(e) => handleCodeExecutorChange(index, 'taskDescription', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Формат ввода:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={section.codeExecutor.taskInputFormat}\r\n                onChange={(e) => handleCodeExecutorChange(index, 'taskInputFormat', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Формат вывода:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={section.codeExecutor.taskOutputFormat}\r\n                onChange={(e) => handleCodeExecutorChange(index, 'taskOutputFormat', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Пример:</label>\r\n              <div>\r\n                <label>Ввод:</label>\r\n                <textarea\r\n                  value={section.codeExecutor.taskExample.input}\r\n                  onChange={(e) => handleCodeExecutorChange(index, 'taskExample.input', e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label>Вывод:</label>\r\n                <textarea\r\n                  value={section.codeExecutor.taskExample.output}\r\n                  onChange={(e) => handleCodeExecutorChange(index, 'taskExample.output', e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Тесты:</label>\r\n              {section.codeExecutor.test.map((test, testIndex) => (\r\n                <div key={testIndex} className=\"test-group\">\r\n                  <div>\r\n                    <label>Ввод:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={test.input}\r\n                      onChange={(e) => handleCodeExecutorChange(index, `test.${testIndex}.input`, e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label>Ожидаемый вывод:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={test.expectedOutput}\r\n                      onChange={(e) => handleCodeExecutorChange(index, `test.${testIndex}.expectedOutput`, e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <button type=\"button\" onClick={() => removeCodeExecutorTest(index, testIndex)}>\r\n                    Удалить тест\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button type=\"button\" onClick={() => addCodeExecutorTest(index)}>\r\n                Добавить тест\r\n              </button>\r\n            </div>\r\n            <button type=\"button\" onClick={() => removeContentItem(index)}>Удалить</button>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='add-lesson-container'>\r\n      <div className='lesson-header'>\r\n        <h1>Добавить урок</h1>\r\n        <label>Заголовок урока:</label>\r\n        <input\r\n          type='text'\r\n          value={lesson.title}\r\n          onChange={handleTitleChange}\r\n        />\r\n      </div>\r\n      <div className='lesson-content'>\r\n        {lesson.content.map((section, index) => (\r\n          <div className='lesson-section' key={index}>\r\n            {renderSection(section, index)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='add-buttons'>\r\n        <button type='button' onClick={() => addContentItem('text')}>Добавить текст</button>\r\n        <button type='button' onClick={() => addContentItem('list')}>Добавить список</button>\r\n        <button type='button' onClick={() => addContentItem('code')}>Добавить код</button>\r\n        <button type='button' onClick={() => addContentItem('subtitle')}>Добавить подзаголовок</button>\r\n        <button type='button' onClick={() => addContentItem('quizzes')}>Добавить викторину</button>\r\n        <button type='button' onClick={() => addContentItem('codeExecutor')}>Добавить выполнение кода</button>\r\n      </div>\r\n      <button className=\"submit-button\" onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLesson;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEQ;;AAER;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}