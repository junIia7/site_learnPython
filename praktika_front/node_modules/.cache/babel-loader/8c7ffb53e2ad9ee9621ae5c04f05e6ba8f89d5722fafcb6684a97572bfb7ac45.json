{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasat\\\\Desktop\\\\praktika_front\\\\src\\\\components\\\\Lesson.js\";\nimport React from 'react';\nimport '../styles/Lesson-style.css';\nimport Quiz from './Quiz';\nimport CodeExecutor from './CodeExecutor';\nimport '../styles/Quiz.css';\nimport '../styles/CodeEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lesson = ({\n  lesson\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lesson-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lesson-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: lesson.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), lesson.content.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lesson-section\",\n      children: renderSection(section)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Lesson;\nconst renderSection = section => {\n  switch (section.type) {\n    case 'text':\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          overflowWrap: 'break-word'\n        },\n        children: section.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    case 'list':\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: section.list.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            overflowWrap: 'break-word'\n          },\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    case 'code':\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          style: {\n            overflowWrap: 'break-word'\n          },\n          children: section.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    case 'subtitle':\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          overflowWrap: 'break-word'\n        },\n        children: section.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    case 'quizzes':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lesson-quizzes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0422\\u0435\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Quiz, {\n          quiz: section.quizzes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    case 'codeExecutor':\n      return /*#__PURE__*/_jsxDEV(CodeExecutor, {\n        codeExecutor: section.codeExecutor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    default:\n      return null;\n  }\n};\nexport default Lesson;\nvar _c;\n$RefreshReg$(_c, \"Lesson\");","map":{"version":3,"names":["React","Quiz","CodeExecutor","jsxDEV","_jsxDEV","Lesson","lesson","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","map","section","index","renderSection","_c","type","style","overflowWrap","text","list","items","item","code","subtitle","quiz","quizzes","codeExecutor","$RefreshReg$"],"sources":["C:/Users/kasat/Desktop/praktika_front/src/components/Lesson.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/Lesson-style.css';\r\nimport Quiz from './Quiz';\r\nimport CodeExecutor from './CodeExecutor';\r\nimport '../styles/Quiz.css'\r\nimport '../styles/CodeEditor.css'\r\n\r\nconst Lesson = ({ lesson }) => {\r\n  return (\r\n    <div className='lesson-container'>\r\n      <div className='lesson-header'>\r\n        <h1>{lesson.title}</h1>\r\n      </div>\r\n      {lesson.content.map((section, index) => (\r\n        <div className='lesson-section' key={index}>\r\n          {renderSection(section)}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderSection = (section) => {\r\n  switch (section.type) {\r\n    case 'text':\r\n      return <p style={{ overflowWrap: 'break-word' }}>{section.text}</p>\r\n    case 'list':\r\n      return (\r\n        <ul>\r\n          {section.list.items.map((item, index) => (\r\n            <li style={{ overflowWrap: 'break-word' }} key={index}>{item}</li>\r\n          ))}\r\n        </ul>\r\n      )\r\n    case 'code':\r\n      return (\r\n        <pre>\r\n          <code style={{ overflowWrap: 'break-word' }}>\r\n            {section.code}\r\n          </code>\r\n        </pre>\r\n      )\r\n    case 'subtitle':\r\n      return <h2 style={{ overflowWrap: 'break-word' }}>{section.subtitle}</h2>\r\n    case 'quizzes':\r\n      return (\r\n        <div className='lesson-quizzes'>\r\n          <h2>Тест</h2>\r\n          <Quiz quiz={section.quizzes} />\r\n        </div>\r\n      )\r\n    case 'codeExecutor':\r\n      return (\r\n        <CodeExecutor codeExecutor={section.codeExecutor} />\r\n      )\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default Lesson;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,4BAA4B;AACnC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,oBAAoB;AAC3B,OAAO,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAC7B,oBACEF,OAAA;IAAKG,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BJ,OAAA;MAAKG,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BJ,OAAA;QAAAI,QAAA,EAAKF,MAAM,CAACG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACLP,MAAM,CAACQ,OAAO,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACjCb,OAAA;MAAKG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BU,aAAa,CAACF,OAAO;IAAC,GADYC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErC,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,GAbId,MAAM;AAeZ,MAAMa,aAAa,GAAIF,OAAO,IAAK;EACjC,QAAQA,OAAO,CAACI,IAAI;IAClB,KAAK,MAAM;MACT,oBAAOhB,OAAA;QAAGiB,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAa,CAAE;QAAAd,QAAA,EAAEQ,OAAO,CAACO;MAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IACrE,KAAK,MAAM;MACT,oBACET,OAAA;QAAAI,QAAA,EACGQ,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACV,GAAG,CAAC,CAACW,IAAI,EAAET,KAAK,kBAClCb,OAAA;UAAIiB,KAAK,EAAE;YAAEC,YAAY,EAAE;UAAa,CAAE;UAAAd,QAAA,EAAckB;QAAI,GAAZT,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAClE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAET,KAAK,MAAM;MACT,oBACET,OAAA;QAAAI,QAAA,eACEJ,OAAA;UAAMiB,KAAK,EAAE;YAAEC,YAAY,EAAE;UAAa,CAAE;UAAAd,QAAA,EACzCQ,OAAO,CAACW;QAAI;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAEV,KAAK,UAAU;MACb,oBAAOT,OAAA;QAAIiB,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAa,CAAE;QAAAd,QAAA,EAAEQ,OAAO,CAACY;MAAQ;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAC3E,KAAK,SAAS;MACZ,oBACET,OAAA;QAAKG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BJ,OAAA;UAAAI,QAAA,EAAI;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbT,OAAA,CAACH,IAAI;UAAC4B,IAAI,EAAEb,OAAO,CAACc;QAAQ;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAEV,KAAK,cAAc;MACjB,oBACET,OAAA,CAACF,YAAY;QAAC6B,YAAY,EAAEf,OAAO,CAACe;MAAa;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAExD;MACE,OAAO,IAAI;EACf;AACF,CAAC;AAED,eAAeR,MAAM;AAAC,IAAAc,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}