{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasat\\\\Desktop\\\\praktika_front\\\\src\\\\components\\\\Lesson.js\";\n// src/components/Lesson.js\nimport React from 'react';\nimport '../styles/Lesson-style.css';\nimport Quiz from './Quiz';\nimport CodeExecutor from './CodeExecutor';\nimport '../styles/Quiz.css';\nimport '../styles/CodeEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lesson = ({\n  lesson\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lesson-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lesson-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: lesson.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), lesson.content.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lesson-section\",\n      children: renderSection(section)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Lesson;\nconst renderSection = section => {\n  switch (section.type) {\n    case 'text':\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: section.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    case 'list':\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: section.list.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    case 'code':\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: section.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    case 'subtitle':\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"section.subtitle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    case 'quizzes':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lesson-quizzes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0422\\u0435\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Quiz, {\n          quiz: section.quizzes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    case 'codeExecutor':\n      /*#__PURE__*/_jsxDEV(CodeExecutor, {\n        codeExecutor: section.codeExecutor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this);\n  }\n};\nexport default Lesson;\nvar _c;\n$RefreshReg$(_c, \"Lesson\");","map":{"version":3,"names":["React","Quiz","CodeExecutor","jsxDEV","_jsxDEV","Lesson","lesson","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","map","section","index","renderSection","_c","type","text","list","items","item","code","quiz","quizzes","codeExecutor","$RefreshReg$"],"sources":["C:/Users/kasat/Desktop/praktika_front/src/components/Lesson.js"],"sourcesContent":["// src/components/Lesson.js\r\nimport React from 'react';\r\nimport '../styles/Lesson-style.css';\r\nimport Quiz from './Quiz';\r\nimport CodeExecutor from './CodeExecutor';\r\nimport '../styles/Quiz.css'\r\nimport '../styles/CodeEditor.css'\r\n\r\nconst Lesson = ({ lesson }) => {\r\n  return (\r\n    <div className='lesson-container'>\r\n      <div className='lesson-header'>\r\n        <h1>{lesson.title}</h1>\r\n      </div>\r\n      {lesson.content.map((section, index) => (\r\n        <div className='lesson-section' key={index}>\r\n          {renderSection(section)}\r\n        </div>\r\n      ))}\r\n\r\n\r\n      {/* {lesson.quizzes.length > 0 && (\r\n        <div className='lesson-quizzes'>\r\n          <h2>Тест</h2>\r\n            <Quiz quiz={lesson.quizzes} />\r\n        </div>\r\n      )}\r\n      {lesson.codeExecutor.taskDescription && (\r\n        <div className='lesson-code-executor'>\r\n          <CodeExecutor codeExecutor={lesson.codeExecutor} />\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderSection = (section) => {\r\n  switch (section.type) {\r\n    case 'text':\r\n      return <p>{section.text}</p>\r\n    case 'list':\r\n      return (\r\n        <ul>\r\n          {section.list.items.map((item, index)=> (\r\n            <li key={index}>{item}</li>\r\n          ))}\r\n        </ul>\r\n      )\r\n    case 'code':\r\n      return (\r\n        <pre>\r\n          <code>\r\n            {section.code}\r\n          </code>\r\n        </pre>\r\n      )\r\n    case 'subtitle':\r\n      return <h2>section.subtitle</h2>\r\n    case 'quizzes':\r\n      return(\r\n        <div className='lesson-quizzes'>\r\n          <h2>Тест</h2>\r\n          <Quiz quiz={section.quizzes} />\r\n        </div>\r\n      )\r\n    case 'codeExecutor':\r\n      <CodeExecutor codeExecutor={section.codeExecutor} />\r\n  }\r\n}\r\n\r\nexport default Lesson;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}