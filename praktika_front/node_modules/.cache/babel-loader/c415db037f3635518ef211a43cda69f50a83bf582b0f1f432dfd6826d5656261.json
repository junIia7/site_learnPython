{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasat\\\\Desktop\\\\praktika_front\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  quiz\n}) => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const handleAnswerOptionClick = selectedOption => {\n    if (selectedOption === questions[currentQuestion].answer) {\n      setShowError(false);\n      const nextQuestion = currentQuestion + 1;\n      if (nextQuestion < questions.length) setCurrentQuestion(nextQuestion);else setShowResult(true);\n    } else setShowError(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: quiz.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quiz.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n\n  //   <div className=\"quiz-container\">\n  //     {showResult ? (\n  //       <div className=\"result-section\">\n  //         <h2>Тест пройден успешно!</h2>\n  //       </div>\n  //     )\n  //     :\n  //     (\n  //       <div className=\"question-section\">\n  //         <h2>Вопрос {currentQuestion + 1} из {questions.length}</h2>\n  //         <p>{questions[currentQuestion].question}</p>\n  //         <div className=\"options-section\">\n  //           {questions[currentQuestion].options.map((option, index) => (\n  //             <button key={index} onClick={() => handleAnswerOptionClick(option)}>\n  //               {option}\n  //             </button>\n  //           ))}\n  //         </div>\n  //         {showError && <p className=\"error-message\">Ответ неверный, попробуйте еще раз.</p>}\n  //       </div>\n  //     )}\n  //   </div>\n  // );\n};\n_s(Quiz, \"s0bM4JVThMTMFdu/KRn1hSVDoKo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","quiz","_s","currentQuestion","setCurrentQuestion","showResult","setShowResult","showError","setShowError","handleAnswerOptionClick","selectedOption","questions","answer","nextQuestion","length","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","index","_c","$RefreshReg$"],"sources":["C:/Users/kasat/Desktop/praktika_front/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Quiz.css';\r\n\r\nconst Quiz = ({quiz}) => {\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  const handleAnswerOptionClick = (selectedOption) => {\r\n    if (selectedOption === questions[currentQuestion].answer) {\r\n      setShowError(false);\r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length)\r\n        setCurrentQuestion(nextQuestion);\r\n      else\r\n        setShowResult(true);\r\n    }\r\n    else\r\n      setShowError(true);\r\n  };\r\n\r\n  return (\r\n    <div className='quiz'>\r\n      <h3>{quiz.question}</h3>\r\n      <ul>\r\n        {quiz.options.map((option, index) => (\r\n          <li key={index}>{option}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  //   <div className=\"quiz-container\">\r\n  //     {showResult ? (\r\n  //       <div className=\"result-section\">\r\n  //         <h2>Тест пройден успешно!</h2>\r\n  //       </div>\r\n  //     )\r\n  //     :\r\n  //     (\r\n  //       <div className=\"question-section\">\r\n  //         <h2>Вопрос {currentQuestion + 1} из {questions.length}</h2>\r\n  //         <p>{questions[currentQuestion].question}</p>\r\n  //         <div className=\"options-section\">\r\n  //           {questions[currentQuestion].options.map((option, index) => (\r\n  //             <button key={index} onClick={() => handleAnswerOptionClick(option)}>\r\n  //               {option}\r\n  //             </button>\r\n  //           ))}\r\n  //         </div>\r\n  //         {showError && <p className=\"error-message\">Ответ неверный, попробуйте еще раз.</p>}\r\n  //       </div>\r\n  //     )}\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,IAAI,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAEvB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,uBAAuB,GAAIC,cAAc,IAAK;IAClD,IAAIA,cAAc,KAAKC,SAAS,CAACR,eAAe,CAAC,CAACS,MAAM,EAAE;MACxDJ,YAAY,CAAC,KAAK,CAAC;MACnB,MAAMK,YAAY,GAAGV,eAAe,GAAG,CAAC;MACxC,IAAIU,YAAY,GAAGF,SAAS,CAACG,MAAM,EACjCV,kBAAkB,CAACS,YAAY,CAAC,CAAC,KAEjCP,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAECE,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACET,OAAA;IAAKgB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBjB,OAAA;MAAAiB,QAAA,EAAKf,IAAI,CAACgB;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBtB,OAAA;MAAAiB,QAAA,EACGf,IAAI,CAACqB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9B1B,OAAA;QAAAiB,QAAA,EAAiBQ;MAAM,GAAdC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;;EAGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAAnB,EAAA,CArDKF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAuDV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}