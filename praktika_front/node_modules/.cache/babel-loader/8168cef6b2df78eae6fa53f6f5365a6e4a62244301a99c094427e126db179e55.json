{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasat\\\\Desktop\\\\praktika_front\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../styles/Quiz.css';\n\n// const Quiz = ({quiz}) => {\n\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [showResult, setShowResult] = useState(false);\n//   const [showError, setShowError] = useState(false);\n//   const questions = quiz\n//   console.log(quiz)\n\n//   const handleAnswerOptionClick = (selectedOption) => {\n//     if (selectedOption === questions[currentQuestion].answer) {\n//       setShowError(false);\n//       const nextQuestion = currentQuestion + 1;\n//       if (nextQuestion < questions.length)\n//         setCurrentQuestion(nextQuestion);\n//       else\n//         setShowResult(true);\n//     }\n//     else\n//       setShowError(true);\n//   };\n\n//   return (\n//     <div className=\"quiz-container\">\n//       {showResult ? (\n//         <div className=\"result-section\">\n//           <h2>Тест пройден успешно!</h2>\n//         </div>\n//       )\n//       :\n//       (\n//         <div className=\"question-section\">\n//           <h2>Вопрос {currentQuestion + 1} из {questions.length}</h2>\n//           <p>{questions[currentQuestion].question}</p>\n//           <div className=\"options-section\">\n//             {questions[currentQuestion].options.map((option, index) => (\n//               <button key={index} onClick={() => handleAnswerOptionClick(option)}>\n//                 {option}\n//               </button>\n//             ))}\n//           </div>\n//           {showError && <p className=\"error-message\">Ответ неверный, попробуйте еще раз.</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Quiz;\n\nimport React, { useState } from 'react';\nimport '../styles/Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  quiz\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const handleOptionClick = isCorrect => {\n    if (isCorrect) {\n      if (currentQuestionIndex < quiz.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setFeedback('');\n      } else {\n        setFeedback('Тест пройден');\n      }\n    } else {\n      setFeedback('Ответ неверный');\n    }\n  };\n  const currentQuestion = quiz[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-question\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-options\",\n      children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionClick(option === currentQuestion.answer),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"C4vz8vI058RLTtO5SFqGD4HJOBA=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","feedback","setFeedback","handleOptionClick","isCorrect","length","currentQuestion","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","index","onClick","answer","_c","$RefreshReg$"],"sources":["C:/Users/kasat/Desktop/praktika_front/src/components/Quiz.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../styles/Quiz.css';\r\n\r\n// const Quiz = ({quiz}) => {\r\n\r\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\r\n//   const [showResult, setShowResult] = useState(false);\r\n//   const [showError, setShowError] = useState(false);\r\n//   const questions = quiz\r\n//   console.log(quiz)\r\n\r\n//   const handleAnswerOptionClick = (selectedOption) => {\r\n//     if (selectedOption === questions[currentQuestion].answer) {\r\n//       setShowError(false);\r\n//       const nextQuestion = currentQuestion + 1;\r\n//       if (nextQuestion < questions.length)\r\n//         setCurrentQuestion(nextQuestion);\r\n//       else\r\n//         setShowResult(true);\r\n//     }\r\n//     else\r\n//       setShowError(true);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"quiz-container\">\r\n//       {showResult ? (\r\n//         <div className=\"result-section\">\r\n//           <h2>Тест пройден успешно!</h2>\r\n//         </div>\r\n//       )\r\n//       :\r\n//       (\r\n//         <div className=\"question-section\">\r\n//           <h2>Вопрос {currentQuestion + 1} из {questions.length}</h2>\r\n//           <p>{questions[currentQuestion].question}</p>\r\n//           <div className=\"options-section\">\r\n//             {questions[currentQuestion].options.map((option, index) => (\r\n//               <button key={index} onClick={() => handleAnswerOptionClick(option)}>\r\n//                 {option}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//           {showError && <p className=\"error-message\">Ответ неверный, попробуйте еще раз.</p>}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Quiz;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport '../styles/Quiz.css';\r\n\r\nconst Quiz = ({ quiz }) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  const handleOptionClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      if (currentQuestionIndex < quiz.length - 1) {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        setFeedback('');\r\n      } else {\r\n        setFeedback('Тест пройден');\r\n      }\r\n    } else {\r\n      setFeedback('Ответ неверный');\r\n    }\r\n  };\r\n\r\n  const currentQuestion = quiz[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className='quiz-container'>\r\n      <div className='quiz-question'>\r\n        <h3>{currentQuestion.question}</h3>\r\n      </div>\r\n      <div className='quiz-options'>\r\n        {currentQuestion.options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleOptionClick(option === currentQuestion.answer)}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {feedback && <div className='quiz-feedback'>{feedback}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,iBAAiB,GAAIC,SAAS,IAAK;IACvC,IAAIA,SAAS,EAAE;MACb,IAAIL,oBAAoB,GAAGF,IAAI,CAACQ,MAAM,GAAG,CAAC,EAAE;QAC1CL,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;QACjDG,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACLA,WAAW,CAAC,cAAc,CAAC;MAC7B;IACF,CAAC,MAAM;MACLA,WAAW,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC;EAED,MAAMI,eAAe,GAAGT,IAAI,CAACE,oBAAoB,CAAC;EAElD,oBACEJ,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bb,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5Bb,OAAA;QAAAa,QAAA,EAAKF,eAAe,CAACG;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNlB,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BF,eAAe,CAACQ,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzCtB,OAAA;QAEEuB,OAAO,EAAEA,CAAA,KAAMf,iBAAiB,CAACa,MAAM,KAAKV,eAAe,CAACa,MAAM,CAAE;QAAAX,QAAA,EAEnEQ;MAAM,GAHFC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLZ,QAAQ,iBAAIN,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEP;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAACf,EAAA,CArCIF,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}