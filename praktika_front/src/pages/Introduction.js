import React from 'react';
import '../styles/Lesson-style.css';
import CodeExecutor from '../components/CodeExecutor';
import ScrollToTopButton from '../components/ScrollTopButton';

const Introduction = () => {

  const content = 
    {
      test: '',
      taskDescription: "Здесь будет написано задание",
      taskInputFormat: "Здесь будет написан формат, в котором данные даются программе (input).",
      taskOutputFormat: "Здесь будет написан формат, в котором программа выводит данные (print).",
      taskExample: {
        input: "Пример входных данных",
        output: "Пример выходных данных"
      }
    }

  return (
    <div className="lesson-container">
      <header className="lesson-header">
        <h1>Добро пожаловать на портал "Изучаем Python с нуля"!</h1>
      </header>

      <section className="lesson-section">
        <h2>О портале</h2>
        <p>
          Этот портал создан для тех, кто хочет освоить программирование на Python с самых основ. 
          На портале изложен структурированный и последовательный подход к обучению, который позволит 
          шаг за шагом погрузиться в мир программирования. Независимо от уровня подготовки
          здесь можно найти все необходимые ресурсы для успешного изучения Python.
        </p>
      </section>

      <section className="lesson-section">
        <h2>Из чего состоит портал?</h2>
        <ul>
          <li>Пошаговые уроки: На портале представлены подробные уроки, которые охватывают 
          все основные концепции Python. Каждый урок содержит теоретические материалы, примеры кода 
          и практические задания.</li>

          <li>Практические задания и проекты: Для закрепления знаний на портале предложены
          разнообразные задачи. Их выполнение позволяет применить полученные знания на практике 
          и создать свои собственные программы.</li>

          <li>Ресурсы и материалы: В отдельном разделе собраны лучшие книги, статьи, 
          видео и другие учебные материалы, которые помогут изучить Python или углубить уже 
          существующие знания и навыки.</li>
        </ul>
      </section>

      <section className="lesson-section">
        <h2>Python: общий обзор</h2>
        <p>
          Python - это мощный и гибкий язык программирования, который был создан в конце 1980-х годов и 
          выпущен в 1991 году голландским программистом Гвидо ван Россумом. С момента своего появления 
          Python стал одним из самых популярных языков программирования в мире. Его простота, читаемость 
          и широкие возможности делают его идеальным выбором как для начинающих, так и для опытных 
          разработчиков.
        </p>
        <p>
          За последние несколько десятилетий Python нашел применение в самых разных областях, 
          от веб-разработки до научных исследований. Веб-сайты и веб-приложения, созданные на Python, 
          включают такие популярные платформы, как YouTube, Instagram и Spotify. В мире науки и техники 
          Python используется в NASA для анализа данных и управления космическими миссиями.
        </p>
        <p>
          Python также играет ключевую роль в области машинного обучения и искусственного интеллекта. 
          Многие современные алгоритмы и модели, которые используются для распознавания образов, 
          обработки естественного языка и других сложных задач, реализованы на Python с использованием 
          библиотек, таких как TensorFlow и PyTorch.
        </p>
        <p>
          В бизнесе Python применяется для автоматизации рабочих процессов, анализа данных и создания 
          мощных и гибких решений для управления бизнесом. Такие компании, как Google и Dropbox, активно 
          используют Python для разработки своих продуктов и сервисов.
        </p>
      </section>

      <section className="lesson-section">
        <h2>Почему Python?</h2>
        <ul>
          <li>Простота и удобочитаемость: Python имеет простой и интуитивно понятный 
          синтаксис, который позволяет легко читать и писать код. Это делает его идеальным для обучения 
          программированию.</li>

          <li>Широкое применение: Python используется в самых разных областях, 
          включая веб-разработку, анализ данных, искусственный интеллект, машинное обучение, автоматизацию 
          систем, научные вычисления и многое другое.</li>

          <li>Большое и активное сообщество: Благодаря большому сообществу разработчиков, 
          Python имеет огромное множество ресурсов, библиотек и инструментов. Это облегчает 
          процесс обучения и разработки, а также позволяет быстро находить решения для различных задач.</li>

          <li>Кроссплатформенность: Python работает на всех популярных операционных системах,
           таких как Windows, macOS и Linux, что делает его универсальным инструментом для разработки.</li>

          <li>Богатая стандартная библиотека: Python поставляется с обширной стандартной 
          библиотекой, которая включает в себя модули для работы с файлами, интернет-протоколами, 
          системными вызовами и многим другим. Это позволяет быстро начинать разработку проектов 
          без необходимости искать сторонние библиотеки.</li>
        </ul>
      </section>

      <section className="lesson-section">
        <h2>Что дальше?</h2>
        <p>
          Изучение Python откроет множество возможностей. Вот некоторые из них:
        </p>
        <ul>
          <li>Веб-разработка: Python активно применяется для разработки разнообразных 
          веб-приложений благодаря своей простоте и мощным инструментам. Фреймворки, такие как 
          Django и Flask, делают процесс создания веб-приложений более удобным и эффективным.</li>
          
          <li>Анализ данных: Использование библиотек, таких как Pandas, NumPy и Matplotlib, 
          обеспечивает возможность эффективного анализа и визуализации данных. Эти инструменты позволяют 
          не только обрабатывать и структурировать большие объемы информации, но и создавать выразительные 
          графики и диаграммы для наглядного представления результатов анализа.</li>

          <li>Машинное обучение и искусственный интеллект: С библиотеками, такими как 
          TensorFlow и Scikit-learn, можно разрабатывать и обучать модели машинного обучения, 
          которые могут решать сложные задачи, делать прогнозы и группировать данные по схожим признакам.</li>

          <li>Автоматизация и скрипты: Python отлично подходит для автоматизации 
          рутинных задач и написания скриптов, которые могут существенно упростить вашу работу.</li>
        </ul>
      </section>

      <div className="lesson-section">
        <h2>Введение в синтаксис Python</h2>
        <p>
            Python известен своим чистым и простым синтаксисом, что делает его отличным выбором для начинающих программистов. 
            Основные принципы синтаксиса включают:
        </p>
        <ul>
          <li>Простота и лаконичность: Код Python легко читается и понимается благодаря минимальному количеству необходимых 
            скобок и операторов.</li>
          <li>Использование отступов: В отличие от многих других языков программирования, Python использует отступы для определения
              блоков кода, что способствует лучшей структурированности и читабельности.</li>
          <li>Динамическая типизация: Переменные в Python не требуют явного указания типа данных, что упрощает код и делает его 
            более гибким.</li>
          <li>Интерпретируемость: Python является интерпретируемым языком, что означает, что код выполняется строка за строкой без 
            необходимости предварительной компиляции, облегчая тестирование и отладку.</li>
        </ul>
      </div>

      <section className="lesson-section">
        <h2>Первый скрипт "Hello, World!"</h2>
        <p>
          Ваш первый скрипт на Python будет выводить текст "Hello, World!" на экран. 
          Это традиционный способ знакомства с новым языком программирования. Чтобы создать и запустить 
          этот скрипт, выполните следующие шаги:
        </p>
        <ol>
          <li>Создание скрипта: 
          Откройте текстовый редактор (например, Notepad, Sublime Text или VS Code) и создайте новый файл. 
          Назовите его, например, <code>hello.py</code>.</li>
          <li>Написание кода: Введите следующий код в ваш файл:</li>
          <pre><code>print("Hello, World!")</code></pre>
          <li>Сохранение и запуск: Сохраните файл и запустите его, используя командную 
          строку или терминал. Перейдите в директорию, где находится ваш файл, и введите:</li>
          <pre><code>python hello.py</code></pre>
          <li>Если все сделано правильно, вы увидите вывод:</li>
          <pre><code>Hello, World!</code></pre>
        </ol>
        <p>
          Или можете воспользоваться встроенным редактором кода. Тестирующая система предлагает два способа проверки кода. Кнопка 
          "Запустить код" позволяет быстро выполнить код и увидеть результат на экране без сохранения. Она полезна для быстрой проверки 
          синтаксиса и вывода. Кнопка "Отправить на проверку" запускает код через все тесты, проверяя его ответы на разных значениях.</p>
        <p>
          На первом уроке проверки нет, но в последующих уроках они станут обязательной частью обучения.
        </p>
        <p>
          Комментирование в Python осуществляется с помощью символа #. Это позволяет вставлять пояснения и примечания, 
          которые будут проигнорированы интерпретатором.
        </p>
      </section>

    <section className="lesson-section">
      <CodeExecutor codeExecutor={content}/> 
    </section>

      <section className="lesson-section">
        <p>Поздравляем! Вы написали и запустили свой первый скрипт на Python. Этот простой пример демонстрирует, насколько 
          легко начать программировать на этом языке. В последующих уроках будет изучен синтаксис и возможности Python, 
          чтобы вы могли создавать более сложные и интересные программы.</p>
      </section>

      <div className="lesson-footer">
        <p>
          Портал "Изучаем язык Python с нуля" поможет на каждом этапе изучения Python. 
          Следуйте урокам и выполняйте практические задания. Независимо от того, хотите ли вы стать профессиональным разработчиком, 
          научиться автоматизировать задачи или просто расширить свои знания, изучение Python станет захватывающим и полезным опытом.
        </p>
      </div>
      <ScrollToTopButton /> 
    </div>
  );
}

export default Introduction;
